import {
  $,
  $c,
  $h,
  Ac,
  Ah,
  Dc,
  Dh,
  Ec,
  Eh,
  Fc,
  Fh,
  Gc,
  Hh,
  Ih,
  Il,
  Kc,
  Lc,
  Lh,
  M,
  Mc,
  Mh,
  Nc,
  Oc,
  Pc,
  Q,
  Rc,
  Sc,
  Th,
  Uc,
  Uh,
  Vc,
  Vh,
  Yh,
  Zh,
  _c,
  _l,
  al,
  at,
  bc,
  bh,
  cl,
  dc,
  dl,
  el,
  et,
  fc,
  fl,
  gc,
  gl,
  hl,
  il,
  jh,
  kc,
  kh,
  lc,
  mc,
  ml,
  mt,
  nl,
  ol,
  pc,
  pl,
  q,
  qc,
  rl,
  sc,
  sl,
  tl,
  uc,
  ul,
  vh,
  vt,
  wc,
  wl,
  xc,
  xh,
  xt,
  yc,
  yl,
  yt,
  z
} from "./chunk-N53DHTGU.js";
import "./chunk-A5O3PWYO.js";
import "./chunk-FH3PLF5R.js";
export {
  jh as AbstractUserDataWriter,
  qc as Bytes,
  Ac as CACHE_SIZE_UNLIMITED,
  _c as CollectionReference,
  fc as DocumentReference,
  Th as DocumentSnapshot,
  Lc as FieldPath,
  Gc as FieldValue,
  Rc as Firestore,
  Q as FirestoreError,
  Kc as GeoPoint,
  Ec as LoadBundleTask,
  dc as Query,
  Vh as QueryConstraint,
  Eh as QueryDocumentSnapshot,
  Ah as QuerySnapshot,
  Ih as SnapshotMetadata,
  at as Timestamp,
  fl as Transaction,
  Hh as WriteBatch,
  vt as _DatabaseId,
  xt as _DocumentKey,
  et as _EmptyAppCheckTokenProvider,
  z as _EmptyAuthCredentialsProvider,
  mt as _FieldPath,
  uc as _cast,
  q as _debugAssert,
  yt as _isBase64Available,
  $ as _logWarn,
  Il as _setIndexConfiguration,
  sc as _validateIsNotUsedTogether,
  ul as addDoc,
  gl as arrayRemove,
  ml as arrayUnion,
  xc as clearIndexedDbPersistence,
  wc as collection,
  mc as collectionGroup,
  lc as connectFirestoreEmulator,
  ol as deleteDoc,
  _l as deleteField,
  Mc as disableNetwork,
  gc as doc,
  Uc as documentId,
  Sc as enableIndexedDbPersistence,
  Dc as enableMultiTabIndexedDbPersistence,
  kc as enableNetwork,
  Uh as endAt,
  Lh as endBefore,
  Vc as ensureFirestoreConfigured,
  hl as executeWrite,
  Yh as getDoc,
  Zh as getDocFromCache,
  tl as getDocFromServer,
  el as getDocs,
  nl as getDocsFromCache,
  sl as getDocsFromServer,
  Pc as getFirestore,
  yl as increment,
  bc as initializeFirestore,
  kh as limit,
  Mh as limitToLast,
  Fc as loadBundle,
  $c as namedQuery,
  al as onSnapshot,
  cl as onSnapshotsInSync,
  xh as orderBy,
  vh as query,
  pc as queryEqual,
  yc as refEqual,
  dl as runTransaction,
  wl as serverTimestamp,
  il as setDoc,
  M as setLogLevel,
  bh as snapshotEqual,
  $h as startAfter,
  Fh as startAt,
  Oc as terminate,
  rl as updateDoc,
  Nc as waitForPendingWrites,
  Dh as where,
  pl as writeBatch
};
//# sourceMappingURL=firebase_firestore.js.map
