{
  "version": 3,
  "sources": ["../@adobe/react-spectrum-ui/dist/AlertMedium.js", "../@spectrum-icons/ui/AlertMedium.js", "../@adobe/react-spectrum-ui/dist/CheckmarkMedium.js", "../@spectrum-icons/ui/CheckmarkMedium.js", "../@adobe/react-spectrum-ui/dist/Asterisk.js", "../@spectrum-icons/ui/Asterisk.js", "../@react-spectrum/layout/dist/packages/@react-spectrum/layout/src/index.ts", "../@react-spectrum/layout/dist/packages/@react-spectrum/layout/src/Grid.tsx", "../@react-spectrum/layout/dist/packages/@react-spectrum/layout/src/Flex.tsx", "../@react-spectrum/layout/dist/packages/@react-spectrum/layout/src/flex-gap.css", "../@react-spectrum/form/dist/packages/@react-spectrum/form/src/index.ts", "../@react-spectrum/form/dist/packages/@react-spectrum/form/src/Form.tsx", "../@react-spectrum/form/dist/packages/@adobe/spectrum-css-temp/components/fieldlabel/vars.css", "../@react-aria/label/dist/packages/@react-aria/label/src/index.ts", "../@react-aria/label/dist/packages/@react-aria/label/src/useField.ts", "../@react-aria/label/dist/packages/@react-aria/label/src/useLabel.ts", "../@react-aria/textfield/dist/packages/@react-aria/textfield/src/index.ts", "../@react-aria/textfield/dist/packages/@react-aria/textfield/src/useTextField.ts", "../@react-aria/textfield/dist/packages/@react-aria/textfield/src/useFormattedTextField.ts", "../@react-spectrum/label/dist/packages/@react-spectrum/label/src/index.ts", "../@react-spectrum/label/dist/packages/@react-spectrum/label/src/Field.tsx", "../@react-spectrum/label/dist/packages/@react-spectrum/label/src/HelpText.tsx", "../@react-spectrum/label/dist/packages/@adobe/spectrum-css-temp/components/helptext/vars.css", "../@react-spectrum/label/dist/packages/@react-spectrum/label/src/Label.tsx", "../@react-spectrum/label/dist/packages/@react-spectrum/label/intl/*.js", "../@react-spectrum/label/dist/packages/@react-spectrum/label/intl/ar-AE.json", "../@react-spectrum/label/dist/packages/@react-spectrum/label/intl/bg-BG.json", "../@react-spectrum/label/dist/packages/@react-spectrum/label/intl/cs-CZ.json", "../@react-spectrum/label/dist/packages/@react-spectrum/label/intl/da-DK.json", "../@react-spectrum/label/dist/packages/@react-spectrum/label/intl/de-DE.json", "../@react-spectrum/label/dist/packages/@react-spectrum/label/intl/el-GR.json", "../@react-spectrum/label/dist/packages/@react-spectrum/label/intl/en-US.json", "../@react-spectrum/label/dist/packages/@react-spectrum/label/intl/es-ES.json", "../@react-spectrum/label/dist/packages/@react-spectrum/label/intl/et-EE.json", "../@react-spectrum/label/dist/packages/@react-spectrum/label/intl/fi-FI.json", "../@react-spectrum/label/dist/packages/@react-spectrum/label/intl/fr-FR.json", "../@react-spectrum/label/dist/packages/@react-spectrum/label/intl/he-IL.json", "../@react-spectrum/label/dist/packages/@react-spectrum/label/intl/hr-HR.json", "../@react-spectrum/label/dist/packages/@react-spectrum/label/intl/hu-HU.json", "../@react-spectrum/label/dist/packages/@react-spectrum/label/intl/it-IT.json", "../@react-spectrum/label/dist/packages/@react-spectrum/label/intl/ja-JP.json", "../@react-spectrum/label/dist/packages/@react-spectrum/label/intl/ko-KR.json", "../@react-spectrum/label/dist/packages/@react-spectrum/label/intl/lt-LT.json", "../@react-spectrum/label/dist/packages/@react-spectrum/label/intl/lv-LV.json", "../@react-spectrum/label/dist/packages/@react-spectrum/label/intl/nb-NO.json", "../@react-spectrum/label/dist/packages/@react-spectrum/label/intl/nl-NL.json", "../@react-spectrum/label/dist/packages/@react-spectrum/label/intl/pl-PL.json", "../@react-spectrum/label/dist/packages/@react-spectrum/label/intl/pt-BR.json", "../@react-spectrum/label/dist/packages/@react-spectrum/label/intl/pt-PT.json", "../@react-spectrum/label/dist/packages/@react-spectrum/label/intl/ro-RO.json", "../@react-spectrum/label/dist/packages/@react-spectrum/label/intl/ru-RU.json", "../@react-spectrum/label/dist/packages/@react-spectrum/label/intl/sk-SK.json", "../@react-spectrum/label/dist/packages/@react-spectrum/label/intl/sl-SI.json", "../@react-spectrum/label/dist/packages/@react-spectrum/label/intl/sr-SP.json", "../@react-spectrum/label/dist/packages/@react-spectrum/label/intl/sv-SE.json", "../@react-spectrum/label/dist/packages/@react-spectrum/label/intl/tr-TR.json", "../@react-spectrum/label/dist/packages/@react-spectrum/label/intl/uk-UA.json", "../@react-spectrum/label/dist/packages/@react-spectrum/label/intl/zh-CN.json", "../@react-spectrum/label/dist/packages/@react-spectrum/label/intl/zh-TW.json", "../@react-spectrum/label/dist/packages/@adobe/spectrum-css-temp/components/fieldlabel/vars.css", "../@react-spectrum/textfield/dist/packages/@react-spectrum/textfield/src/index.ts", "../@react-spectrum/textfield/dist/packages/@react-spectrum/textfield/src/TextArea.tsx", "../@react-spectrum/textfield/dist/packages/@react-spectrum/textfield/src/TextFieldBase.tsx", "../@react-spectrum/textfield/dist/packages/@adobe/spectrum-css-temp/components/textfield/vars.css", "../@react-spectrum/textfield/dist/packages/@react-spectrum/textfield/src/TextField.tsx", "../@react-aria/slider/dist/packages/@react-aria/slider/src/index.ts", "../@react-aria/slider/dist/packages/@react-aria/slider/src/useSlider.ts", "../@react-aria/slider/dist/packages/@react-aria/slider/src/utils.ts", "../@react-aria/slider/dist/packages/@react-aria/slider/src/useSliderThumb.ts", "../@react-stately/slider/dist/packages/@react-stately/slider/src/index.ts", "../@react-stately/slider/dist/packages/@react-stately/slider/src/useSliderState.ts", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/src/index.ts", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/src/useSpinButton.ts", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/intl/*.js", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/intl/ar-AE.json", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/intl/bg-BG.json", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/intl/cs-CZ.json", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/intl/da-DK.json", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/intl/de-DE.json", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/intl/el-GR.json", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/intl/en-US.json", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/intl/es-ES.json", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/intl/et-EE.json", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/intl/fi-FI.json", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/intl/fr-FR.json", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/intl/he-IL.json", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/intl/hr-HR.json", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/intl/hu-HU.json", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/intl/it-IT.json", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/intl/ja-JP.json", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/intl/ko-KR.json", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/intl/lt-LT.json", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/intl/lv-LV.json", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/intl/nb-NO.json", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/intl/nl-NL.json", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/intl/pl-PL.json", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/intl/pt-BR.json", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/intl/pt-PT.json", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/intl/ro-RO.json", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/intl/ru-RU.json", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/intl/sk-SK.json", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/intl/sl-SI.json", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/intl/sr-SP.json", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/intl/sv-SE.json", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/intl/tr-TR.json", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/intl/uk-UA.json", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/intl/zh-CN.json", "../@react-aria/spinbutton/dist/packages/@react-aria/spinbutton/intl/zh-TW.json"],
  "sourcesContent": ["/**\n* @adobe/react-spectrum-ui (c) by Adobe\n* \n* @adobe/react-spectrum-ui is licensed under a\n* Creative Commons Attribution-NoDerivatives 4.0 International License.\n* \n* You should have received a copy of the license along with this\n* work. If not, see <http://creativecommons.org/licenses/by-nd/4.0/>.\n**/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AlertMedium = AlertMedium;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction AlertMedium(_ref) {\n  var _ref$scale = _ref.scale,\n      scale = _ref$scale === void 0 ? 'M' : _ref$scale,\n      props = _objectWithoutProperties(_ref, [\"scale\"]);\n\n  return _react[\"default\"].createElement(\"svg\", _extends({}, props, props), scale === 'L' && _react[\"default\"].createElement(\"path\", {\n    d: \"M10.563 2.206l-9.249 16.55a.5.5 0 0 0 .436.744h18.5a.5.5 0 0 0 .436-.744l-9.251-16.55a.5.5 0 0 0-.872 0zm1.436 15.044a.25.25 0 0 1-.25.25h-1.5a.25.25 0 0 1-.25-.25v-1.5a.25.25 0 0 1 .25-.25h1.5a.25.25 0 0 1 .25.25zm0-3.5a.25.25 0 0 1-.25.25h-1.5a.25.25 0 0 1-.25-.25v-6a.25.25 0 0 1 .25-.25h1.5a.25.25 0 0 1 .25.25z\"\n  }), scale === 'M' && _react[\"default\"].createElement(\"path\", {\n    d: \"M8.564 1.289L.2 16.256A.5.5 0 0 0 .636 17h16.728a.5.5 0 0 0 .436-.744L9.436 1.289a.5.5 0 0 0-.872 0zM10 14.75a.25.25 0 0 1-.25.25h-1.5a.25.25 0 0 1-.25-.25v-1.5a.25.25 0 0 1 .25-.25h1.5a.25.25 0 0 1 .25.25zm0-3a.25.25 0 0 1-.25.25h-1.5a.25.25 0 0 1-.25-.25v-6a.25.25 0 0 1 .25-.25h1.5a.25.25 0 0 1 .25.25z\"\n  }));\n}\n\nAlertMedium.displayName = 'AlertMedium';", "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = AlertMedium;\n\nvar _AlertMedium = require(\"@adobe/react-spectrum-ui/dist/AlertMedium\");\n\nvar _icon = require(\"@react-spectrum/icon\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction AlertMedium(props) {\n  return /*#__PURE__*/_react.default.createElement(_icon.UIIcon, props, /*#__PURE__*/_react.default.createElement(_AlertMedium.AlertMedium, null));\n}", "/**\n* @adobe/react-spectrum-ui (c) by Adobe\n* \n* @adobe/react-spectrum-ui is licensed under a\n* Creative Commons Attribution-NoDerivatives 4.0 International License.\n* \n* You should have received a copy of the license along with this\n* work. If not, see <http://creativecommons.org/licenses/by-nd/4.0/>.\n**/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CheckmarkMedium = CheckmarkMedium;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction CheckmarkMedium(_ref) {\n  var _ref$scale = _ref.scale,\n      scale = _ref$scale === void 0 ? 'M' : _ref$scale,\n      props = _objectWithoutProperties(_ref, [\"scale\"]);\n\n  return _react[\"default\"].createElement(\"svg\", _extends({}, props, props), scale === 'L' && _react[\"default\"].createElement(\"path\", {\n    d: \"M6 14a1 1 0 0 1-.789-.385l-4-5a1 1 0 1 1 1.577-1.23L6 11.376l7.213-8.99a1 1 0 1 1 1.576 1.23l-8 10a1 1 0 0 1-.789.384z\"\n  }), scale === 'M' && _react[\"default\"].createElement(\"path\", {\n    d: \"M4.5 10a1.022 1.022 0 0 1-.799-.384l-2.488-3a1 1 0 0 1 1.576-1.233L4.5 7.376l4.712-5.991a1 1 0 1 1 1.576 1.23l-5.51 7A.978.978 0 0 1 4.5 10z\"\n  }));\n}\n\nCheckmarkMedium.displayName = 'CheckmarkMedium';", "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = CheckmarkMedium;\n\nvar _CheckmarkMedium = require(\"@adobe/react-spectrum-ui/dist/CheckmarkMedium\");\n\nvar _icon = require(\"@react-spectrum/icon\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction CheckmarkMedium(props) {\n  return /*#__PURE__*/_react.default.createElement(_icon.UIIcon, props, /*#__PURE__*/_react.default.createElement(_CheckmarkMedium.CheckmarkMedium, null));\n}", "/**\n* @adobe/react-spectrum-ui (c) by Adobe\n* \n* @adobe/react-spectrum-ui is licensed under a\n* Creative Commons Attribution-NoDerivatives 4.0 International License.\n* \n* You should have received a copy of the license along with this\n* work. If not, see <http://creativecommons.org/licenses/by-nd/4.0/>.\n**/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Asterisk = Asterisk;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction Asterisk(_ref) {\n  var _ref$scale = _ref.scale,\n      scale = _ref$scale === void 0 ? 'M' : _ref$scale,\n      props = _objectWithoutProperties(_ref, [\"scale\"]);\n\n  return _react[\"default\"].createElement(\"svg\", _extends({}, props, props), scale === 'L' && _react[\"default\"].createElement(\"path\", {\n    d: \"M7.867 7.872c.061.062.103.145 0 .228l-1.283.827c-.104.061-.145.02-.186-.083L4.804 6.07l-2.09 2.297c-.021.042-.083.083-.145 0l-.994-1.035c-.103-.062-.082-.124 0-.186l2.36-1.966-2.691-1.014c-.042 0-.104-.083-.062-.186l.703-1.41a.11.11 0 0 1 .187-.04L4.43 4.06l.145-3.02A.109.109 0 0 1 4.7.917l1.718.227c.104 0 .124.042.104.145l-.808 2.96 2.734-.828c.061-.042.124-.042.165.082l.27 1.532c.02.103 0 .145-.084.145l-2.856.227z\"\n  }), scale === 'M' && _react[\"default\"].createElement(\"path\", {\n    d: \"M6.573 6.558c.056.055.092.13 0 .204l-1.148.74c-.093.056-.13.02-.167-.073L3.832 4.947l-1.87 2.055c-.02.037-.075.074-.13 0l-.889-.926c-.092-.055-.074-.111 0-.167l2.111-1.76-2.408-.906c-.037 0-.092-.074-.055-.167l.63-1.259a.097.097 0 0 1 .166-.036l2.111 1.37.13-2.704a.097.097 0 0 1 .111-.11L5.277.54c.092 0 .11.037.092.13l-.722 2.647 2.444-.74c.056-.038.111-.038.148.073l.241 1.37c.019.093 0 .13-.074.13l-2.556.204z\"\n  }));\n}\n\nAsterisk.displayName = 'Asterisk';", "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = Asterisk;\n\nvar _Asterisk = require(\"@adobe/react-spectrum-ui/dist/Asterisk\");\n\nvar _icon = require(\"@react-spectrum/icon\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction Asterisk(props) {\n  return /*#__PURE__*/_react.default.createElement(_icon.UIIcon, props, /*#__PURE__*/_react.default.createElement(_Asterisk.Asterisk, null));\n}", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/// <reference types=\"css-module-types\" />\n\nexport * from './Grid';\nexport * from './Flex';\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {\n  baseStyleProps,\n  dimensionValue,\n  passthroughStyle,\n  StyleHandlers,\n  useDOMRef,\n  useStyleProps\n} from '@react-spectrum/utils';\nimport {DimensionValue, DOMRef} from '@react-types/shared';\nimport {filterDOMProps} from '@react-aria/utils';\nimport {GridProps} from '@react-types/layout';\nimport React, {forwardRef} from 'react';\n\nconst gridStyleProps: StyleHandlers = {\n  ...baseStyleProps,\n  autoFlow: ['gridAutoFlow', passthroughStyle],\n  autoColumns: ['gridAutoColumns', gridDimensionValue],\n  autoRows: ['gridAutoRows', gridDimensionValue],\n  areas: ['gridTemplateAreas', gridTemplateAreasValue],\n  columns: ['gridTemplateColumns', gridTemplateValue],\n  rows: ['gridTemplateRows', gridTemplateValue],\n  gap: ['gap', dimensionValue],\n  rowGap: ['rowGap', dimensionValue],\n  columnGap: ['columnGap', dimensionValue],\n  justifyItems: ['justifyItems', passthroughStyle],\n  justifyContent: ['justifyContent', passthroughStyle],\n  alignItems: ['alignItems', passthroughStyle],\n  alignContent: ['alignContent', passthroughStyle]\n};\n\nfunction Grid(props: GridProps, ref: DOMRef<HTMLDivElement>) {\n  let {\n    children,\n    ...otherProps\n  } = props;\n  let {styleProps} = useStyleProps(otherProps, gridStyleProps);\n  styleProps.style.display = 'grid'; // inline-grid?\n  let domRef = useDOMRef(ref);\n\n  return (\n    <div {...filterDOMProps(otherProps)} {...styleProps} ref={domRef}>\n      {children}\n    </div>\n  );\n}\n\n/**\n * Can be used to make a repeating fragment of the columns or rows list.\n * See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/repeat).\n * @param count - The number of times to repeat the fragment.\n * @param repeat - The fragment to repeat.\n */\nexport function repeat(count: number | 'auto-fill' | 'auto-fit', repeat: DimensionValue | DimensionValue[]): string {\n  return `repeat(${count}, ${gridTemplateValue(repeat)})`;\n}\n\n/**\n * Defines a size range greater than or equal to min and less than or equal to max.\n * See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/minmax).\n * @param min - The minimum size.\n * @param max - The maximum size.\n */\nexport function minmax(min: DimensionValue, max: DimensionValue): string {\n  return `minmax(${gridDimensionValue(min)}, ${gridDimensionValue(max)})`;\n}\n\n/**\n * Clamps a given size to an available size.\n * See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/fit-content).\n * @param dimension - The size to clamp.\n */\nexport function fitContent(dimension: DimensionValue): string {\n  return `fit-content(${gridDimensionValue(dimension)})`;\n}\n\nfunction gridTemplateAreasValue(value) {\n  return value.map(v => `\"${v}\"`).join('\\n');\n}\n\nfunction gridDimensionValue(value) {\n  if (/^max-content|min-content|minmax|auto|fit-content|repeat|subgrid/.test(value)) {\n    return value;\n  }\n\n  return dimensionValue(value);\n}\n\nfunction gridTemplateValue(value) {\n  if (Array.isArray(value)) {\n    return value.map(gridDimensionValue).join(' ');\n  }\n\n  return gridDimensionValue(value);\n}\n\n/**\n * A layout container using CSS grid. Supports Spectrum dimensions as values to\n * ensure consistent and adaptive sizing and spacing.\n */\nconst _Grid = forwardRef(Grid);\nexport {_Grid as Grid};\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames, passthroughStyle, responsiveDimensionValue, StyleHandlers, useBreakpoint, useDOMRef, useStyleProps} from '@react-spectrum/utils';\nimport {DOMRef} from '@react-types/shared';\nimport {filterDOMProps} from '@react-aria/utils';\nimport {FlexProps} from '@react-types/layout';\nimport React, {forwardRef} from 'react';\nimport styles from './flex-gap.css';\nimport {useIsSSR} from '@react-aria/ssr';\n\nconst flexStyleProps: StyleHandlers = {\n  direction: ['flexDirection', passthroughStyle],\n  wrap: ['flexWrap', flexWrapValue],\n  justifyContent: ['justifyContent', flexAlignValue],\n  alignItems: ['alignItems', flexAlignValue],\n  alignContent: ['alignContent', flexAlignValue]\n};\n\nfunction Flex(props: FlexProps, ref: DOMRef<HTMLDivElement>) {\n  let {\n    children,\n    ...otherProps\n  } = props;\n  let breakpointProvider = useBreakpoint();\n  let matchedBreakpoints = breakpointProvider?.matchedBreakpoints || ['base'];\n  let {styleProps} = useStyleProps(otherProps);\n  let {styleProps: flexStyle} = useStyleProps(otherProps, flexStyleProps);\n  let domRef = useDOMRef(ref);\n  let isSSR = useIsSSR();\n\n  // If a gap property is specified, and there is no native support or we're in SSR, use a shim.\n  // Two divs are required for this: the outer one contains most style properties, and the inner\n  // one is the flex container. Each item inside the flex container gets a margin around it based\n  // on the gap, and the flex container has a negative margin to counteract this. The outer container\n  // is necessary to allow nesting of flex containers with gaps, so that the inner CSS variable doesn't\n  // override the outer one.\n  if ((props.gap || props.rowGap || props.columnGap) && (isSSR || !isFlexGapSupported())) {\n    let style = {\n      ...flexStyle.style,\n      '--column-gap': props.columnGap != null ? responsiveDimensionValue(props.columnGap, matchedBreakpoints) : undefined,\n      '--row-gap': props.rowGap != null ? responsiveDimensionValue(props.rowGap, matchedBreakpoints) : undefined,\n      '--gap': props.gap != null ? responsiveDimensionValue(props.gap, matchedBreakpoints) : undefined\n    };\n\n    return (\n      <div {...filterDOMProps(otherProps)} {...styleProps} className={classNames(styles, 'flex-container', styleProps.className)} ref={domRef}>\n        <div className={classNames(styles, 'flex', 'flex-gap')} style={style}>\n          {children}\n        </div>\n      </div>\n    );\n  }\n\n  // If no gaps, or native support exists, then we only need to render a single div.\n  let style = {\n    ...styleProps.style,\n    ...flexStyle.style\n  };\n\n  if (props.gap != null) {\n    style.gap = responsiveDimensionValue(props.gap, matchedBreakpoints);\n  }\n\n  if (props.columnGap != null) {\n    style.columnGap = responsiveDimensionValue(props.columnGap, matchedBreakpoints);\n  }\n\n  if (props.rowGap != null) {\n    style.rowGap = responsiveDimensionValue(props.rowGap, matchedBreakpoints);\n  }\n\n  return (\n    <div {...filterDOMProps(otherProps)} className={classNames(styles, 'flex', styleProps.className)} style={style} ref={domRef}>\n      {children}\n    </div>\n  );\n}\n\n/**\n * Normalize 'start' and 'end' alignment values to 'flex-start' and 'flex-end'\n * in flex containers for browser compatibility.\n */\nfunction flexAlignValue(value) {\n  if (value === 'start') {\n    return 'flex-start';\n  }\n\n  if (value === 'end') {\n    return 'flex-end';\n  }\n\n  return value;\n}\n\n/**\n * Takes a boolean and translates it to flex wrap or nowrap.\n */\nfunction flexWrapValue(value) {\n  if (typeof value === 'boolean') {\n    return value ? 'wrap' : 'nowrap';\n  }\n\n  return value;\n}\n\n\n// Original licensing for the following method can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/Modernizr/Modernizr/blob/7efb9d0edd66815fb115fdce95fabaf019ce8db5/feature-detects/css/flexgap.js\n\nlet _isFlexGapSupported = null;\nfunction isFlexGapSupported() {\n  if (_isFlexGapSupported != null) {\n    return _isFlexGapSupported;\n  }\n\n  if (typeof document === 'undefined') {\n    return false;\n  }\n\n  // create flex container with row-gap set\n  var flex = document.createElement('div');\n  flex.style.display = 'flex';\n  flex.style.flexDirection = 'column';\n  flex.style.rowGap = '1px';\n\n  // create two, elements inside it\n  flex.appendChild(document.createElement('div'));\n  flex.appendChild(document.createElement('div'));\n\n  // append to the DOM (needed to obtain scrollHeight)\n  document.body.appendChild(flex);\n  _isFlexGapSupported = flex.scrollHeight === 1; // flex container should be 1px high from the row-gap\n  flex.parentNode.removeChild(flex);\n\n  return _isFlexGapSupported;\n}\n\n/**\n * A layout container using flexbox. Provides Spectrum dimension values, and supports the gap\n * property to define consistent spacing between items.\n */\nconst _Flex = forwardRef(Flex);\nexport {_Flex as Flex};\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n.flex-container {\n  /* this is necessary so that the inner margins don't affect anything outside */\n  display: flex;\n}\n\n.flex {\n  display: flex;\n}\n\n.flex-gap {\n  --gap: 0px;\n  --column-gap: var(--gap);\n  --row-gap: var(--gap);\n\n  /* apply a negative margin to counteract the margin on each item at the edges */\n  margin: calc(var(--row-gap) / -2) calc(var(--column-gap) / -2);\n\n  /* increase the width and height to account for this margin */\n  /* Add 1px to fix rounding error in Safari (\u256F\u00B0\u25A1\u00B0)\u256F\uFE35 \u253B\u2501\u253B */\n  width: calc(100% + calc(var(--column-gap) + 1px));\n  height: calc(100% + var(--row-gap));\n}\n\n/* If the selector was .flex-gap > *, it wouldn't override when components have a margin 0 specified by a single\n * class selector, specificity is equal. Both are one class. Neither > nor * contribute to specificity.\n * We need to make it more specific, so we raise it by 1 class.\n */\n.flex-container .flex-gap > * {\n  /* apply half of the gap to each side of every item */\n  margin: calc(var(--row-gap) / 2) calc(var(--column-gap) / 2);\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/// <reference types=\"css-module-types\" />\n\nexport * from './Form';\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Alignment, DOMRef, LabelPosition, SpectrumLabelableProps} from '@react-types/shared';\nimport {classNames, useDOMRef, useStyleProps} from '@react-spectrum/utils';\nimport {filterDOMProps} from '@react-aria/utils';\nimport {Provider, useProviderProps} from '@react-spectrum/provider';\nimport React, {useContext} from 'react';\nimport {SpectrumFormProps} from '@react-types/form';\nimport styles from '@adobe/spectrum-css-temp/components/fieldlabel/vars.css';\n\nlet FormContext = React.createContext<SpectrumLabelableProps>({});\nexport function useFormProps<T extends SpectrumLabelableProps>(props: T): T {\n  let ctx = useContext(FormContext);\n  return {...ctx, ...props};\n}\n\nconst formPropNames = new Set([\n  'action',\n  'autoComplete',\n  'encType',\n  'method',\n  'target',\n  'onSubmit'\n]);\n\nfunction Form(props: SpectrumFormProps, ref: DOMRef<HTMLFormElement>) {\n  props = useProviderProps(props);\n  let {\n    children,\n    labelPosition = 'top' as LabelPosition,\n    labelAlign = 'start' as Alignment,\n    isRequired,\n    necessityIndicator,\n    isQuiet,\n    isEmphasized,\n    isDisabled,\n    isReadOnly,\n    validationState,\n    ...otherProps\n  } = props;\n\n  let {styleProps} = useStyleProps(otherProps);\n  let domRef = useDOMRef(ref);\n\n  let ctx = {\n    labelPosition,\n    labelAlign,\n    necessityIndicator\n  };\n\n  return (\n    <form\n      {...filterDOMProps(otherProps, {labelable: true, propNames: formPropNames})}\n      {...styleProps}\n      noValidate\n      ref={domRef}\n      className={\n        classNames(\n          styles,\n          'spectrum-Form',\n          {\n            'spectrum-Form--positionSide': labelPosition === 'side',\n            'spectrum-Form--positionTop': labelPosition === 'top'\n          },\n          styleProps.className\n        )\n      }>\n      <FormContext.Provider value={ctx}>\n        <Provider\n          isQuiet={isQuiet}\n          isEmphasized={isEmphasized}\n          isDisabled={isDisabled}\n          isReadOnly={isReadOnly}\n          isRequired={isRequired}\n          validationState={validationState}>\n          {children}\n        </Provider>\n      </FormContext.Provider>\n    </form>\n  );\n}\n\n/**\n * Forms allow users to enter data that can be submitted while providing alignment and styling for form fields.\n */\nconst _Form = React.forwardRef(Form);\nexport {_Form as Form};\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport * from './useField';\nexport * from './useLabel';\n", "/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {HelpTextProps, Validation} from '@react-types/shared';\nimport {HTMLAttributes} from 'react';\nimport {LabelAria, LabelAriaProps, useLabel} from './useLabel';\nimport {mergeProps, useSlotId} from '@react-aria/utils';\n\ninterface AriaFieldProps extends LabelAriaProps, HelpTextProps, Omit<Validation, 'isRequired'> {}\n\nexport interface FieldAria extends LabelAria {\n  /** Props for the description element, if any. */\n  descriptionProps: HTMLAttributes<HTMLElement>,\n  /** Props for the error message element, if any. */\n  errorMessageProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Provides the accessibility implementation for input fields.\n * Fields accept user input, gain context from their label, and may display a description or error message.\n * @param props - Props for the Field.\n */\nexport function useField(props: AriaFieldProps): FieldAria {\n  let {description, errorMessage, validationState} = props;\n  let {labelProps, fieldProps} = useLabel(props);\n\n  let descriptionId = useSlotId([Boolean(description), Boolean(errorMessage), validationState]);\n  let errorMessageId = useSlotId([Boolean(description), Boolean(errorMessage), validationState]);\n\n  fieldProps = mergeProps(fieldProps, {\n    'aria-describedby': [\n      descriptionId,\n      // Use aria-describedby for error message because aria-errormessage is unsupported using VoiceOver or NVDA. See https://github.com/adobe/react-spectrum/issues/1346#issuecomment-740136268\n      errorMessageId,\n      props['aria-describedby']\n    ].filter(Boolean).join(' ') || undefined\n  });\n\n  return {\n    labelProps,\n    fieldProps,\n    descriptionProps: {\n      id: descriptionId\n    },\n    errorMessageProps: {\n      id: errorMessageId\n    }\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps, DOMProps, LabelableProps} from '@react-types/shared';\nimport {ElementType, LabelHTMLAttributes} from 'react';\nimport {useId, useLabels} from '@react-aria/utils';\n\nexport interface LabelAriaProps extends LabelableProps, DOMProps, AriaLabelingProps {\n  /**\n   * The HTML element used to render the label, e.g. 'label', or 'span'.\n   * @default 'label'\n   */\n  labelElementType?: ElementType\n}\n\nexport interface LabelAria {\n  /** Props to apply to the label container element. */\n  labelProps: LabelHTMLAttributes<HTMLLabelElement>,\n  /** Props to apply to the field container element being labeled. */\n  fieldProps: AriaLabelingProps & DOMProps\n}\n\n/**\n * Provides the accessibility implementation for labels and their associated elements.\n * Labels provide context for user inputs.\n * @param props - The props for labels and fields.\n */\nexport function useLabel(props: LabelAriaProps): LabelAria {\n  let {\n    id,\n    label,\n    'aria-labelledby': ariaLabelledby,\n    'aria-label': ariaLabel,\n    labelElementType = 'label'\n  } = props;\n\n  id = useId(id);\n  let labelId = useId();\n  let labelProps = {};\n  if (label) {\n    ariaLabelledby = ariaLabelledby ? `${ariaLabelledby} ${labelId}` : labelId;\n    labelProps = {\n      id: labelId,\n      htmlFor: labelElementType === 'label' ? id : undefined\n    };\n  } else if (!ariaLabelledby && !ariaLabel) {\n    console.warn('If you do not provide a visible label, you must specify an aria-label or aria-labelledby attribute for accessibility');\n  }\n\n  let fieldProps = useLabels({\n    id,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby\n  });\n\n  return {\n    labelProps,\n    fieldProps\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport * from './useTextField';\nexport * from './useFormattedTextField';\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaTextFieldProps} from '@react-types/textfield';\nimport {\n  ChangeEvent,\n  DOMFactory,\n  HTMLAttributes,\n  LabelHTMLAttributes,\n  ReactDOM,\n  RefObject\n} from 'react';\nimport {filterDOMProps, mergeProps} from '@react-aria/utils';\nimport {useField} from '@react-aria/label';\nimport {useFocusable} from '@react-aria/focus';\n\n/**\n * A map of HTML element names and their interface types.\n * For example `'a'` -> `HTMLAnchorElement`.\n */\ntype IntrinsicHTMLElements = {\n  [K in keyof IntrinsicHTMLAttributes]: IntrinsicHTMLAttributes[K] extends HTMLAttributes<infer T> ? T : never\n};\n\n/**\n * A map of HTML element names and their attribute interface types.\n * For example `'a'` -> `AnchorHTMLAttributes<HTMLAnchorElement>`.\n */\ntype IntrinsicHTMLAttributes = {\n  [K in keyof ReactDOM]: ReactDOM[K] extends DOMFactory<infer T, any> ? T : never\n};\n\ntype DefaultElementType = 'input';\n\n/**\n * The intrinsic HTML element names that `useTextField` supports; e.g. `input`,\n * `textarea`.\n */\ntype TextFieldIntrinsicElements = keyof Pick<IntrinsicHTMLElements, 'input' | 'textarea'>;\n\n /**\n  * The HTML element interfaces that `useTextField` supports based on what is\n  * defined for `TextFieldIntrinsicElements`; e.g. `HTMLInputElement`,\n  * `HTMLTextAreaElement`.\n  */\ntype TextFieldHTMLElementType = Pick<IntrinsicHTMLElements, TextFieldIntrinsicElements>;\n\n /**\n  * The HTML attributes interfaces that `useTextField` supports based on what\n  * is defined for `TextFieldIntrinsicElements`; e.g. `InputHTMLAttributes`,\n  * `TextareaHTMLAttributes`.\n  */\ntype TextFieldHTMLAttributesType = Pick<IntrinsicHTMLAttributes, TextFieldIntrinsicElements>;\n\n/**\n * The type of `inputProps` returned by `useTextField`; e.g. `InputHTMLAttributes`,\n * `TextareaHTMLAttributes`.\n */\ntype TextFieldInputProps<T extends TextFieldIntrinsicElements> = TextFieldHTMLAttributesType[T];\n\ninterface AriaTextFieldOptions<T extends TextFieldIntrinsicElements> extends AriaTextFieldProps {\n  /**\n   * The HTML element used to render the input, e.g. 'input', or 'textarea'.\n   * It determines whether certain HTML attributes will be included in `inputProps`.\n   * For example, [`type`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-type).\n   * @default 'input'\n   */\n  inputElementType?: T\n}\n\n/**\n * The type of `ref` object that can be passed to `useTextField` based on the given\n * intrinsic HTML element name; e.g.`RefObject<HTMLInputElement>`,\n * `RefObject<HTMLTextAreaElement>`.\n */\ntype TextFieldRefObject<T extends TextFieldIntrinsicElements> = RefObject<TextFieldHTMLElementType[T]>;\n\nexport interface TextFieldAria<T extends TextFieldIntrinsicElements = DefaultElementType> {\n  /** Props for the input element. */\n  inputProps: TextFieldInputProps<T>,\n  /** Props for the text field's visible label element, if any. */\n  labelProps: LabelHTMLAttributes<HTMLLabelElement>,\n  /** Props for the text field's description element, if any. */\n  descriptionProps: HTMLAttributes<HTMLElement>,\n  /** Props for the text field's error message element, if any. */\n  errorMessageProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a text field.\n * @param props - Props for the text field.\n * @param ref - Ref to the HTML input or textarea element.\n */\nexport function useTextField<T extends TextFieldIntrinsicElements = DefaultElementType>(\n  props: AriaTextFieldOptions<T>,\n  ref: TextFieldRefObject<T>\n): TextFieldAria<T> {\n  let {\n    inputElementType = 'input',\n    isDisabled = false,\n    isRequired = false,\n    isReadOnly = false,\n    validationState,\n    type = 'text',\n    onChange = () => {}\n  }: AriaTextFieldOptions<TextFieldIntrinsicElements> = props;\n  let {focusableProps} = useFocusable(props, ref);\n  let {labelProps, fieldProps, descriptionProps, errorMessageProps} = useField(props);\n  let domProps = filterDOMProps(props, {labelable: true});\n\n  const inputOnlyProps = {\n    type,\n    pattern: props.pattern\n  };\n\n  return {\n    labelProps,\n    inputProps: mergeProps(\n      domProps,\n      inputElementType === 'input' && inputOnlyProps,\n      {\n        disabled: isDisabled,\n        readOnly: isReadOnly,\n        'aria-required': isRequired || undefined,\n        'aria-invalid': validationState === 'invalid' || undefined,\n        'aria-errormessage': props['aria-errormessage'],\n        'aria-activedescendant': props['aria-activedescendant'],\n        'aria-autocomplete': props['aria-autocomplete'],\n        'aria-haspopup': props['aria-haspopup'],\n        value: props.value,\n        defaultValue: props.value ? undefined : props.defaultValue,\n        onChange: (e: ChangeEvent<HTMLInputElement>) => onChange(e.target.value),\n        autoComplete: props.autoComplete,\n        maxLength: props.maxLength,\n        minLength: props.minLength,\n        name: props.name,\n        placeholder: props.placeholder,\n        inputMode: props.inputMode,\n\n        // Clipboard events\n        onCopy: props.onCopy,\n        onCut: props.onCut,\n        onPaste: props.onPaste,\n\n        // Composition events\n        onCompositionEnd: props.onCompositionEnd,\n        onCompositionStart: props.onCompositionStart,\n        onCompositionUpdate: props.onCompositionUpdate,\n\n        // Selection events\n        onSelect: props.onSelect,\n\n        // Input events\n        onBeforeInput: props.onBeforeInput,\n        onInput: props.onInput,\n        ...focusableProps,\n        ...fieldProps\n      }\n    ),\n    descriptionProps,\n    errorMessageProps\n  };\n}\n", "/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaTextFieldProps} from '@react-types/textfield';\nimport {mergeProps} from '@react-aria/utils';\nimport {RefObject, useEffect, useRef} from 'react';\nimport {TextFieldAria, useTextField} from './useTextField';\n\ninterface FormattedTextFieldState {\n  validate: (val: string) => boolean,\n  setInputValue: (val: string) => void\n}\n\n\nfunction supportsNativeBeforeInputEvent() {\n  return typeof window !== 'undefined' &&\n    window.InputEvent &&\n    // @ts-ignore\n    typeof InputEvent.prototype.getTargetRanges === 'function';\n}\n\nexport function useFormattedTextField(props: AriaTextFieldProps, state: FormattedTextFieldState, inputRef: RefObject<HTMLInputElement>): TextFieldAria {\n\n  let stateRef = useRef(state);\n  stateRef.current = state;\n\n  // All browsers implement the 'beforeinput' event natively except Firefox\n  // (currently behind a flag as of Firefox 84). React's polyfill does not\n  // run in all cases that the native event fires, e.g. when deleting text.\n  // Use the native event if available so that we can prevent invalid deletions.\n  // We do not attempt to polyfill this in Firefox since it would be very complicated,\n  // the benefit of doing so is fairly minor, and it's going to be natively supported soon.\n  useEffect(() => {\n    if (!supportsNativeBeforeInputEvent()) {\n      return;\n    }\n\n    let input = inputRef.current;\n\n    let onBeforeInput = (e: InputEvent) => {\n      let state = stateRef.current;\n\n      // Compute the next value of the input if the event is allowed to proceed.\n      // See https://www.w3.org/TR/input-events-2/#interface-InputEvent-Attributes for a full list of input types.\n      let nextValue: string;\n      switch (e.inputType) {\n        case 'historyUndo':\n        case 'historyRedo':\n          // Explicitly allow undo/redo. e.data is null in this case, but there's no need to validate,\n          // because presumably the input would have already been validated previously.\n          return;\n        case 'deleteContent':\n        case 'deleteByCut':\n        case 'deleteByDrag':\n          nextValue = input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd);\n          break;\n        case 'deleteContentForward':\n          // This is potentially incorrect, since the browser may actually delete more than a single UTF-16\n          // character. In reality, a full Unicode grapheme cluster consisting of multiple UTF-16 characters\n          // or code points may be deleted. However, in our currently supported locales, there are no such cases.\n          // If we support additional locales in the future, this may need to change.\n          nextValue = input.selectionEnd === input.selectionStart\n            ? input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd + 1)\n            : input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd);\n          break;\n        case 'deleteContentBackward':\n          nextValue = input.selectionEnd === input.selectionStart\n            ? input.value.slice(0, input.selectionStart - 1) + input.value.slice(input.selectionStart)\n            : input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd);\n          break;\n        case 'deleteSoftLineBackward':\n        case 'deleteHardLineBackward':\n          nextValue = input.value.slice(input.selectionStart);\n          break;\n        default:\n          if (e.data != null) {\n            nextValue =\n              input.value.slice(0, input.selectionStart) +\n              e.data +\n              input.value.slice(input.selectionEnd);\n          }\n          break;\n      }\n\n      // If we did not compute a value, or the new value is invalid, prevent the event\n      // so that the browser does not update the input text, move the selection, or add to\n      // the undo/redo stack.\n      if (nextValue == null || !state.validate(nextValue)) {\n        e.preventDefault();\n      }\n    };\n\n    input.addEventListener('beforeinput', onBeforeInput, false);\n    return () => {\n      input.removeEventListener('beforeinput', onBeforeInput, false);\n    };\n  }, [inputRef, stateRef]);\n\n  let onBeforeInput = !supportsNativeBeforeInputEvent()\n    ? e => {\n      let nextValue =\n        e.target.value.slice(0, e.target.selectionStart) +\n        e.data +\n        e.target.value.slice(e.target.selectionEnd);\n\n      if (!state.validate(nextValue)) {\n        e.preventDefault();\n      }\n    }\n    : null;\n\n  let {labelProps, inputProps: textFieldProps, descriptionProps, errorMessageProps} = useTextField(props, inputRef);\n\n  let compositionStartState = useRef(null);\n  return {\n    inputProps: mergeProps(\n      textFieldProps,\n      {\n        onBeforeInput,\n        onCompositionStart() {\n          // Chrome does not implement Input Events Level 2, which specifies the insertFromComposition\n          // and deleteByComposition inputType values for the beforeinput event. These are meant to occur\n          // at the end of a composition (e.g. Pinyin IME, Android auto correct, etc.), and crucially, are\n          // cancelable. The insertCompositionText and deleteCompositionText input types are not cancelable,\n          // nor would we want to cancel them because the input from the user is incomplete at that point.\n          // In Safari, insertFromComposition/deleteFromComposition will fire, however, allowing us to cancel\n          // the final composition result if it is invalid. As a fallback for Chrome and Firefox, which either\n          // don't support Input Events Level 2, or beforeinput at all, we store the state of the input when\n          // the compositionstart event fires, and undo the changes in compositionend (below) if it is invalid.\n          // Unfortunately, this messes up the undo/redo stack, but until insertFromComposition/deleteByComposition\n          // are implemented, there is no other way to prevent composed input.\n          // See https://bugs.chromium.org/p/chromium/issues/detail?id=1022204\n          let {value, selectionStart, selectionEnd} = inputRef.current;\n          compositionStartState.current = {value, selectionStart, selectionEnd};\n        },\n        onCompositionEnd() {\n          if (!state.validate(inputRef.current.value)) {\n            // Restore the input value in the DOM immediately so we can synchronously update the selection position.\n            // But also update the value in React state as well so it is correct for future updates.\n            let {value, selectionStart, selectionEnd} = compositionStartState.current;\n            inputRef.current.value = value;\n            inputRef.current.setSelectionRange(selectionStart, selectionEnd);\n            state.setInputValue(value);\n          }\n        }\n      }\n    ),\n    labelProps,\n    descriptionProps,\n    errorMessageProps\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/// <reference types=\"css-module-types\" />\n\nexport * from './Field';\nexport * from './Label';\nexport * from './HelpText';\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames, useStyleProps} from '@react-spectrum/utils';\nimport {Flex} from '@react-spectrum/layout';\nimport {HelpText} from './HelpText';\nimport {Label} from './Label';\nimport {LabelPosition} from '@react-types/shared';\nimport labelStyles from '@adobe/spectrum-css-temp/components/fieldlabel/vars.css';\nimport {mergeProps} from '@react-aria/utils';\nimport React, {RefObject} from 'react';\nimport {SpectrumFieldProps} from '@react-types/label';\nimport {useFormProps} from '@react-spectrum/form';\n\nfunction Field(props: SpectrumFieldProps, ref: RefObject<HTMLElement>) {\n  props = useFormProps(props);\n  let {\n    label,\n    labelPosition = 'top' as LabelPosition,\n    labelAlign,\n    isRequired,\n    necessityIndicator,\n    includeNecessityIndicatorInAccessibilityName,\n    validationState,\n    description,\n    errorMessage,\n    isDisabled,\n    showErrorIcon,\n    children,\n    labelProps,\n    // Not every component that uses <Field> supports help text.\n    descriptionProps = {},\n    errorMessageProps = {},\n    elementType,\n    wrapperClassName,\n\n    ...otherProps\n  } = props;\n  let {styleProps} = useStyleProps(otherProps);\n  let hasHelpText = !!description || errorMessage && validationState === 'invalid';\n\n  if (label || hasHelpText) {\n    let labelWrapperClass = classNames(\n      labelStyles,\n      'spectrum-Field',\n      {\n        'spectrum-Field--positionTop': labelPosition === 'top',\n        'spectrum-Field--positionSide': labelPosition === 'side'\n      },\n      styleProps.className,\n      wrapperClassName\n    );\n\n    children = React.cloneElement(children, mergeProps(children.props, {\n      className: classNames(\n        labelStyles,\n        'spectrum-Field-field'\n      )\n    }));\n\n    let renderHelpText = () => (\n      <HelpText\n        descriptionProps={descriptionProps}\n        errorMessageProps={errorMessageProps}\n        description={description}\n        errorMessage={errorMessage}\n        validationState={validationState}\n        isDisabled={isDisabled}\n        showErrorIcon={showErrorIcon} />\n    );\n\n    let renderChildren = () => (\n      <Flex direction=\"column\" UNSAFE_className={classNames(labelStyles, 'spectrum-Field-wrapper')}>\n        {children}\n        {hasHelpText && renderHelpText()}\n      </Flex>\n    );\n\n    return (\n      <div\n        {...styleProps}\n        ref={ref as RefObject<HTMLDivElement>}\n        className={labelWrapperClass}>\n        {label && (\n          <Label\n            {...labelProps}\n            labelPosition={labelPosition}\n            labelAlign={labelAlign}\n            isRequired={isRequired}\n            necessityIndicator={necessityIndicator}\n            includeNecessityIndicatorInAccessibilityName={includeNecessityIndicatorInAccessibilityName}\n            elementType={elementType}>\n            {label}\n          </Label>\n        )}\n        {renderChildren()}\n      </div>\n    );\n  }\n\n  return React.cloneElement(children, mergeProps(children.props, {\n    ...styleProps,\n    ref\n  }));\n}\n\nlet _Field = React.forwardRef(Field);\nexport {_Field as Field};\n", "/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport AlertMedium from '@spectrum-icons/ui/AlertMedium';\nimport {classNames, useDOMRef} from '@react-spectrum/utils';\nimport {DOMRef, SpectrumHelpTextProps} from '@react-types/shared';\nimport React, {HTMLAttributes} from 'react';\nimport styles from '@adobe/spectrum-css-temp/components/helptext/vars.css';\n\ninterface HelpTextProps extends SpectrumHelpTextProps {\n  /** Props for the help text description element. */\n  descriptionProps: HTMLAttributes<HTMLElement>,\n  /** Props for the help text error message element. */\n  errorMessageProps: HTMLAttributes<HTMLElement>\n}\n\nfunction HelpText(props: HelpTextProps, ref: DOMRef<HTMLDivElement>) {\n  let {\n    description,\n    errorMessage,\n    validationState,\n    isDisabled,\n    showErrorIcon,\n    descriptionProps,\n    errorMessageProps\n  } = props;\n  let domRef = useDOMRef(ref);\n  let isErrorMessage = errorMessage && validationState === 'invalid';\n\n  return (\n    <div\n      className={classNames(\n        styles,\n        'spectrum-HelpText',\n        `spectrum-HelpText--${isErrorMessage ? 'negative' : 'neutral'}`,\n        {'is-disabled': isDisabled}\n      )}\n      ref={domRef}>\n      {isErrorMessage ? (\n        <>\n          {showErrorIcon && <AlertMedium UNSAFE_className={classNames(styles, 'spectrum-HelpText-validationIcon')} />}\n          <div {...errorMessageProps} className={classNames(styles, 'spectrum-HelpText-text')}>\n            {errorMessage}\n          </div>\n        </>\n      ) : (\n        <div {...descriptionProps} className={classNames(styles, 'spectrum-HelpText-text')}>\n          {description}\n        </div>\n      )}\n    </div>\n  );\n}\n\n/**\n * Help text provides either an informative description or an error message that gives more context about what a user needs to input. It's commonly used in forms.\n */\nconst _HelpText = React.forwardRef(HelpText);\nexport {_HelpText as HelpText};\n", "/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport Asterisk from '@spectrum-icons/ui/Asterisk';\nimport {classNames, useDOMRef, useStyleProps} from '@react-spectrum/utils';\nimport {DOMRef} from '@react-types/shared';\nimport {filterDOMProps} from '@react-aria/utils';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport React from 'react';\nimport {SpectrumLabelProps} from '@react-types/label';\nimport styles from '@adobe/spectrum-css-temp/components/fieldlabel/vars.css';\nimport {useMessageFormatter} from '@react-aria/i18n';\nimport {useProviderProps} from '@react-spectrum/provider';\n\nfunction Label(props: SpectrumLabelProps, ref: DOMRef<HTMLLabelElement>) {\n  props = useProviderProps(props);\n  let {\n    children,\n    labelPosition = 'top',\n    labelAlign = labelPosition === 'side' ? 'start' : null,\n    isRequired,\n    necessityIndicator = isRequired != null ? 'icon' : null,\n    includeNecessityIndicatorInAccessibilityName = false,\n    htmlFor,\n    for: labelFor,\n    elementType: ElementType = 'label',\n    onClick,\n    ...otherProps\n  } = props;\n\n  let domRef = useDOMRef(ref);\n  let {styleProps} = useStyleProps(otherProps);\n\n  let formatMessage = useMessageFormatter(intlMessages);\n  let necessityLabel = isRequired ? formatMessage('(required)') : formatMessage('(optional)');\n  let icon = (\n    <Asterisk\n      UNSAFE_className={classNames(styles, 'spectrum-FieldLabel-requiredIcon')}\n      aria-label={includeNecessityIndicatorInAccessibilityName ? formatMessage('(required)') : undefined} />\n  );\n\n  let labelClassNames = classNames(\n    styles,\n    'spectrum-FieldLabel',\n    {\n      'spectrum-FieldLabel--positionSide': labelPosition === 'side',\n      'spectrum-FieldLabel--alignEnd': labelAlign === 'end'\n    },\n    styleProps.className\n  );\n\n  return (\n    <ElementType\n      {...filterDOMProps(otherProps)}\n      {...styleProps}\n      onClick={onClick}\n      ref={domRef}\n      className={labelClassNames}\n      htmlFor={ElementType === 'label' ? labelFor || htmlFor : undefined}>\n      {children}\n      {(necessityIndicator === 'label' || (necessityIndicator === 'icon' && isRequired)) && ' \\u200b'}\n      {/* necessityLabel is hidden to screen readers if the field is required because\n        * aria-required is set on the field in that case. That will already be announced,\n        * so no need to duplicate it here. If optional, we do want it to be announced here. */}\n      {necessityIndicator === 'label' && <span aria-hidden={!includeNecessityIndicatorInAccessibilityName ? isRequired : undefined}>{necessityLabel}</span>}\n      {necessityIndicator === 'icon' && isRequired && icon}\n    </ElementType>\n  );\n}\n\nlet _Label = React.forwardRef(Label);\nexport {_Label as Label};\n", "const _temp0 = require(\"./ar-AE.json\");\nconst _temp1 = require(\"./bg-BG.json\");\nconst _temp2 = require(\"./cs-CZ.json\");\nconst _temp3 = require(\"./da-DK.json\");\nconst _temp4 = require(\"./de-DE.json\");\nconst _temp5 = require(\"./el-GR.json\");\nconst _temp6 = require(\"./en-US.json\");\nconst _temp7 = require(\"./es-ES.json\");\nconst _temp8 = require(\"./et-EE.json\");\nconst _temp9 = require(\"./fi-FI.json\");\nconst _temp10 = require(\"./fr-FR.json\");\nconst _temp11 = require(\"./he-IL.json\");\nconst _temp12 = require(\"./hr-HR.json\");\nconst _temp13 = require(\"./hu-HU.json\");\nconst _temp14 = require(\"./it-IT.json\");\nconst _temp15 = require(\"./ja-JP.json\");\nconst _temp16 = require(\"./ko-KR.json\");\nconst _temp17 = require(\"./lt-LT.json\");\nconst _temp18 = require(\"./lv-LV.json\");\nconst _temp19 = require(\"./nb-NO.json\");\nconst _temp20 = require(\"./nl-NL.json\");\nconst _temp21 = require(\"./pl-PL.json\");\nconst _temp22 = require(\"./pt-BR.json\");\nconst _temp23 = require(\"./pt-PT.json\");\nconst _temp24 = require(\"./ro-RO.json\");\nconst _temp25 = require(\"./ru-RU.json\");\nconst _temp26 = require(\"./sk-SK.json\");\nconst _temp27 = require(\"./sl-SI.json\");\nconst _temp28 = require(\"./sr-SP.json\");\nconst _temp29 = require(\"./sv-SE.json\");\nconst _temp30 = require(\"./tr-TR.json\");\nconst _temp31 = require(\"./uk-UA.json\");\nconst _temp32 = require(\"./zh-CN.json\");\nconst _temp33 = require(\"./zh-TW.json\");\nmodule.exports = {\n  \"ar-AE\": _temp0,\n  \"bg-BG\": _temp1,\n  \"cs-CZ\": _temp2,\n  \"da-DK\": _temp3,\n  \"de-DE\": _temp4,\n  \"el-GR\": _temp5,\n  \"en-US\": _temp6,\n  \"es-ES\": _temp7,\n  \"et-EE\": _temp8,\n  \"fi-FI\": _temp9,\n  \"fr-FR\": _temp10,\n  \"he-IL\": _temp11,\n  \"hr-HR\": _temp12,\n  \"hu-HU\": _temp13,\n  \"it-IT\": _temp14,\n  \"ja-JP\": _temp15,\n  \"ko-KR\": _temp16,\n  \"lt-LT\": _temp17,\n  \"lv-LV\": _temp18,\n  \"nb-NO\": _temp19,\n  \"nl-NL\": _temp20,\n  \"pl-PL\": _temp21,\n  \"pt-BR\": _temp22,\n  \"pt-PT\": _temp23,\n  \"ro-RO\": _temp24,\n  \"ru-RU\": _temp25,\n  \"sk-SK\": _temp26,\n  \"sl-SI\": _temp27,\n  \"sr-SP\": _temp28,\n  \"sv-SE\": _temp29,\n  \"tr-TR\": _temp30,\n  \"uk-UA\": _temp31,\n  \"zh-CN\": _temp32,\n  \"zh-TW\": _temp33\n}", "{\n  \"(optional)\": \"(\u0627\u062E\u062A\u064A\u0627\u0631\u064A)\",\n  \"(required)\": \"(\u0645\u0637\u0644\u0648\u0628)\"\n}\n", "{\n  \"(optional)\": \"(\u043D\u0435\u0437\u0430\u0434\u044A\u043B\u0436\u0438\u0442\u0435\u043B\u043D\u043E)\",\n  \"(required)\": \"(\u0437\u0430\u0434\u044A\u043B\u0436\u0438\u0442\u0435\u043B\u043D\u043E)\"\n}\n", "{\n  \"(optional)\": \"(voliteln\u011B)\",\n  \"(required)\": \"(po\u017Eadov\u00E1no)\"\n}\n", "{\n  \"(optional)\": \"(valgfrit)\",\n  \"(required)\": \"(obligatorisk)\"\n}\n", "{\n  \"(optional)\": \"(optional)\",\n  \"(required)\": \"(erforderlich)\"\n}\n", "{\n  \"(optional)\": \"(\u03C0\u03C1\u03BF\u03B1\u03B9\u03C1\u03B5\u03C4\u03B9\u03BA\u03CC)\",\n  \"(required)\": \"(\u03B1\u03C0\u03B1\u03B9\u03C4\u03B5\u03AF\u03C4\u03B1\u03B9)\"\n}\n", "{\n  \"(required)\": \"(required)\",\n  \"(optional)\": \"(optional)\"\n}\n", "{\n  \"(optional)\": \"(opcional)\",\n  \"(required)\": \"(necesario)\"\n}\n", "{\n  \"(optional)\": \"(valikuline)\",\n  \"(required)\": \"(n\u00F5utav)\"\n}\n", "{\n  \"(optional)\": \"(valinnainen)\",\n  \"(required)\": \"(pakollinen)\"\n}\n", "{\n  \"(optional)\": \"(facultatif)\",\n  \"(required)\": \"(requis)\"\n}\n", "{\n  \"(optional)\": \"(\u05D0\u05D5\u05E4\u05E6\u05D9\u05D5\u05E0\u05DC\u05D9)\",\n  \"(required)\": \"(\u05E0\u05D3\u05E8\u05E9)\"\n}\n", "{\n  \"(optional)\": \"(opcionalno)\",\n  \"(required)\": \"(obvezno)\"\n}\n", "{\n  \"(optional)\": \"(opcion\u00E1lis)\",\n  \"(required)\": \"(k\u00F6telez\u0151)\"\n}\n", "{\n  \"(optional)\": \"(facoltativo)\",\n  \"(required)\": \"(obbligatorio)\"\n}\n", "{\n  \"(optional)\": \"\uFF08\u30AA\u30D7\u30B7\u30E7\u30F3\uFF09\",\n  \"(required)\": \"\uFF08\u5FC5\u9808\uFF09\"\n}\n", "{\n  \"(optional)\": \"(\uC120\uD0DD \uC0AC\uD56D)\",\n  \"(required)\": \"(\uD544\uC218 \uC0AC\uD56D)\"\n}\n", "{\n  \"(optional)\": \"(pasirenkama)\",\n  \"(required)\": \"(privaloma)\"\n}\n", "{\n  \"(optional)\": \"(neoblig\u0101ti)\",\n  \"(required)\": \"(oblig\u0101ti)\"\n}\n", "{\n  \"(optional)\": \"(valgfritt)\",\n  \"(required)\": \"(obligatorisk)\"\n}\n", "{\n  \"(optional)\": \"(optioneel)\",\n  \"(required)\": \"(vereist)\"\n}\n", "{\n  \"(optional)\": \"(opcjonalne)\",\n  \"(required)\": \"(wymagane)\"\n}\n", "{\n  \"(optional)\": \"(opcional)\",\n  \"(required)\": \"(obrigat\u00F3rio)\"\n}\n", "{\n  \"(optional)\": \"(opcional)\",\n  \"(required)\": \"(obrigat\u00F3rio)\"\n}\n", "{\n  \"(optional)\": \"(op\u0163ional)\",\n  \"(required)\": \"(obligatoriu)\"\n}\n", "{\n  \"(optional)\": \"(\u0434\u043E\u043F\u043E\u043B\u043D\u0438\u0442\u0435\u043B\u044C\u043D\u043E)\",\n  \"(required)\": \"(\u043E\u0431\u044F\u0437\u0430\u0442\u0435\u043B\u044C\u043D\u043E)\"\n}\n", "{\n  \"(optional)\": \"(nepovinn\u00E9)\",\n  \"(required)\": \"(povinn\u00E9)\"\n}\n", "{\n  \"(optional)\": \"(opcijsko)\",\n  \"(required)\": \"(obvezno)\"\n}\n", "{\n  \"(optional)\": \"(opciono)\",\n  \"(required)\": \"(obavezno)\"\n}\n", "{\n  \"(optional)\": \"(valfritt)\",\n  \"(required)\": \"(kr\u00E4vs)\"\n}\n", "{\n  \"(optional)\": \"(iste\u011Fe ba\u011Fl\u0131)\",\n  \"(required)\": \"(gerekli)\"\n}\n", "{\n  \"(optional)\": \"(\u043D\u0435\u043E\u0431\u043E\u0432\u2019\u044F\u0437\u043A\u043E\u0432\u043E)\",\n  \"(required)\": \"(\u043E\u0431\u043E\u0432\u2019\u044F\u0437\u043A\u043E\u0432\u043E)\"\n}\n", "{\n  \"(optional)\": \"\uFF08\u53EF\u9009\uFF09\",\n  \"(required)\": \"\uFF08\u5FC5\u586B\uFF09\"\n}\n", "{\n  \"(optional)\": \"(\u9078\u586B)\",\n  \"(required)\": \"(\u5FC5\u586B)\"\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/// <reference types=\"css-module-types\" />\n\nexport * from './TextArea';\nexport * from './TextField';\nexport * from './TextFieldBase';\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {chain, useLayoutEffect} from '@react-aria/utils';\nimport React, {RefObject, useCallback, useRef} from 'react';\nimport {SpectrumTextFieldProps, TextFieldRef} from '@react-types/textfield';\nimport {TextFieldBase} from './TextFieldBase';\nimport {useControlledState} from '@react-stately/utils';\nimport {useProviderProps} from '@react-spectrum/provider';\nimport {useTextField} from '@react-aria/textfield';\n\nfunction TextArea(props: SpectrumTextFieldProps, ref: RefObject<TextFieldRef>) {\n  props = useProviderProps(props);\n  let {\n    isDisabled = false,\n    isQuiet = false,\n    isReadOnly = false,\n    isRequired = false,\n    onChange,\n    ...otherProps\n  } = props;\n\n  // not in stately because this is so we know when to re-measure, which is a spectrum design\n  let [inputValue, setInputValue] = useControlledState(props.value, props.defaultValue, () => {});\n\n  let inputRef = useRef<HTMLTextAreaElement>();\n\n  let onHeightChange = useCallback(() => {\n    if (isQuiet) {\n      let input = inputRef.current;\n      let prevAlignment = input.style.alignSelf;\n      input.style.alignSelf = 'start';\n      input.style.height = 'auto';\n      input.style.height = `${input.scrollHeight}px`;\n      input.style.alignSelf = prevAlignment;\n    }\n  }, [isQuiet, inputRef]);\n\n  useLayoutEffect(() => {\n    if (inputRef.current) {\n      onHeightChange();\n    }\n  }, [onHeightChange, inputValue, inputRef]);\n\n\n  let {labelProps, inputProps, descriptionProps, errorMessageProps} = useTextField({\n    ...props,\n    onChange: chain(onChange, setInputValue),\n    inputElementType: 'textarea'\n  }, inputRef);\n\n  return (\n    <TextFieldBase\n      {...otherProps}\n      ref={ref}\n      inputRef={inputRef}\n      labelProps={labelProps}\n      inputProps={inputProps}\n      descriptionProps={descriptionProps}\n      errorMessageProps={errorMessageProps}\n      multiLine\n      isDisabled={isDisabled}\n      isQuiet={isQuiet}\n      isReadOnly={isReadOnly}\n      isRequired={isRequired} />\n  );\n}\n\n/**\n * TextAreas are multiline text inputs, useful for cases where users have\n * a sizable amount of text to enter. They allow for all customizations that\n * are available to text fields.\n */\nlet _TextArea = React.forwardRef(TextArea);\nexport {_TextArea as TextArea};\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport AlertMedium from '@spectrum-icons/ui/AlertMedium';\nimport CheckmarkMedium from '@spectrum-icons/ui/CheckmarkMedium';\nimport {classNames, createFocusableRef} from '@react-spectrum/utils';\nimport {Field} from '@react-spectrum/label';\nimport {FocusRing} from '@react-aria/focus';\nimport {mergeProps} from '@react-aria/utils';\nimport {PressEvents} from '@react-types/shared';\nimport React, {cloneElement, forwardRef, HTMLAttributes, InputHTMLAttributes, LabelHTMLAttributes, ReactElement, Ref, RefObject, TextareaHTMLAttributes, useImperativeHandle, useRef} from 'react';\nimport {SpectrumTextFieldProps, TextFieldRef} from '@react-types/textfield';\nimport styles from '@adobe/spectrum-css-temp/components/textfield/vars.css';\nimport {useHover} from '@react-aria/interactions';\n\ninterface TextFieldBaseProps extends Omit<SpectrumTextFieldProps, 'onChange'>, PressEvents {\n  wrapperChildren?: ReactElement | ReactElement[],\n  inputClassName?: string,\n  validationIconClassName?: string,\n  multiLine?: boolean,\n  labelProps?: LabelHTMLAttributes<HTMLLabelElement>,\n  inputProps: InputHTMLAttributes<HTMLInputElement> | TextareaHTMLAttributes<HTMLTextAreaElement>,\n  descriptionProps?: HTMLAttributes<HTMLElement>,\n  errorMessageProps?: HTMLAttributes<HTMLElement>,\n  inputRef?: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  loadingIndicator?: ReactElement,\n  isLoading?: boolean\n}\n\nfunction TextFieldBase(props: TextFieldBaseProps, ref: Ref<TextFieldRef>) {\n  let {\n    label,\n    validationState,\n    icon,\n    isQuiet = false,\n    isDisabled,\n    multiLine,\n    autoFocus,\n    inputClassName,\n    wrapperChildren,\n    labelProps,\n    inputProps,\n    descriptionProps,\n    errorMessageProps,\n    inputRef,\n    isLoading,\n    loadingIndicator,\n    validationIconClassName\n  } = props;\n  let {hoverProps, isHovered} = useHover({isDisabled});\n  let domRef = useRef<HTMLDivElement>(null);\n  let defaultInputRef = useRef<HTMLInputElement | HTMLTextAreaElement>(null);\n  inputRef = inputRef || defaultInputRef;\n\n  // Expose imperative interface for ref\n  useImperativeHandle(ref, () => ({\n    ...createFocusableRef(domRef, inputRef),\n    select() {\n      if (inputRef.current) {\n        inputRef.current.select();\n      }\n    },\n    getInputElement() {\n      return inputRef.current;\n    }\n  }));\n\n  let ElementType: React.ElementType = multiLine ? 'textarea' : 'input';\n  let isInvalid = validationState === 'invalid';\n\n  if (icon) {\n    let UNSAFE_className = classNames(\n      styles,\n      icon.props && icon.props.UNSAFE_className,\n      'spectrum-Textfield-icon'\n    );\n\n    icon = cloneElement(icon, {\n      UNSAFE_className,\n      size: 'S'\n    });\n  }\n\n  let validationIcon = isInvalid ? <AlertMedium /> : <CheckmarkMedium />;\n  let validation = cloneElement(validationIcon, {\n    UNSAFE_className: classNames(\n      styles,\n      'spectrum-Textfield-validationIcon',\n      validationIconClassName\n    )\n  });\n\n  let textField = (\n    <div\n      className={\n        classNames(\n          styles,\n          'spectrum-Textfield',\n          {\n            'spectrum-Textfield--invalid': isInvalid,\n            'spectrum-Textfield--valid': validationState === 'valid',\n            'spectrum-Textfield--loadable': loadingIndicator,\n            'spectrum-Textfield--quiet': isQuiet,\n            'spectrum-Textfield--multiline': multiLine\n          }\n        )\n      }>\n      <FocusRing focusRingClass={classNames(styles, 'focus-ring')} isTextInput autoFocus={autoFocus}>\n        <ElementType\n          {...mergeProps(inputProps, hoverProps)}\n          ref={inputRef as any}\n          rows={multiLine ? 1 : undefined}\n          className={\n            classNames(\n              styles,\n              'spectrum-Textfield-input',\n              {\n                'spectrum-Textfield-inputIcon': icon,\n                'is-hovered': isHovered\n              },\n              inputClassName\n            )\n          } />\n      </FocusRing>\n      {icon}\n      {validationState && !isLoading ? validation : null}\n      {isLoading && loadingIndicator}\n      {wrapperChildren}\n    </div>\n  );\n\n  if (label) {\n    textField = React.cloneElement(textField, mergeProps(textField.props, {\n      className: multiLine ? 'spectrum-Field-field--multiline' : ''\n    }));\n  }\n\n  return (\n    <Field\n      {...props}\n      labelProps={labelProps}\n      descriptionProps={descriptionProps}\n      errorMessageProps={errorMessageProps}\n      showErrorIcon={false}\n      ref={domRef}>\n      {textField}\n    </Field>\n  );\n}\n\nconst _TextFieldBase = forwardRef(TextFieldBase);\nexport {_TextFieldBase as TextFieldBase};\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, {forwardRef, RefObject, useRef} from 'react';\nimport {SpectrumTextFieldProps, TextFieldRef} from '@react-types/textfield';\nimport {TextFieldBase} from './TextFieldBase';\nimport {useProviderProps} from '@react-spectrum/provider';\nimport {useTextField} from '@react-aria/textfield';\n\nfunction TextField(props: SpectrumTextFieldProps, ref: RefObject<TextFieldRef>) {\n  props = useProviderProps(props);\n\n  let inputRef = useRef<HTMLInputElement>();\n  let {labelProps, inputProps, descriptionProps, errorMessageProps} = useTextField(props, inputRef);\n  return (\n    <TextFieldBase\n      {...props}\n      labelProps={labelProps}\n      inputProps={inputProps}\n      descriptionProps={descriptionProps}\n      errorMessageProps={errorMessageProps}\n      ref={ref}\n      inputRef={inputRef} />\n  );\n}\n\n/**\n * TextFields are text inputs that allow users to input custom text entries\n * with a keyboard. Various decorations can be displayed around the field to\n * communicate the entry requirements.\n */\nconst _TextField = forwardRef(TextField);\nexport {_TextField as TextField};\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport * from './useSlider';\nexport * from './useSliderThumb';\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaSliderProps} from '@react-types/slider';\nimport {clamp, mergeProps, useGlobalListeners} from '@react-aria/utils';\nimport {getSliderThumbId, sliderIds} from './utils';\nimport React, {HTMLAttributes, LabelHTMLAttributes, OutputHTMLAttributes, RefObject, useRef} from 'react';\nimport {setInteractionModality, useMove} from '@react-aria/interactions';\nimport {SliderState} from '@react-stately/slider';\nimport {useLabel} from '@react-aria/label';\nimport {useLocale} from '@react-aria/i18n';\n\ninterface SliderAria {\n  /** Props for the label element. */\n  labelProps: LabelHTMLAttributes<HTMLLabelElement>,\n\n  /** Props for the root element of the slider component; groups slider inputs. */\n  groupProps: HTMLAttributes<HTMLElement>,\n\n  /** Props for the track element. */\n  trackProps: HTMLAttributes<HTMLElement>,\n\n  /** Props for the output element, displaying the value of the slider thumbs. */\n  outputProps: OutputHTMLAttributes<HTMLOutputElement>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a slider component representing one or more values.\n *\n * @param props Props for the slider.\n * @param state State for the slider, as returned by `useSliderState`.\n * @param trackRef Ref for the \"track\" element.  The width of this element provides the \"length\"\n * of the track -- the span of one dimensional space that the slider thumb can be.  It also\n * accepts click and drag motions, so that the closest thumb will follow clicks and drags on\n * the track.\n */\nexport function useSlider(\n  props: AriaSliderProps,\n  state: SliderState,\n  trackRef: RefObject<HTMLElement>\n): SliderAria {\n  let {labelProps, fieldProps} = useLabel(props);\n\n  let isVertical = props.orientation === 'vertical';\n\n  // Attach id of the label to the state so it can be accessed by useSliderThumb.\n  sliderIds.set(state, labelProps.id ?? fieldProps.id);\n\n  let {direction} = useLocale();\n\n  let {addGlobalListener, removeGlobalListener} = useGlobalListeners();\n\n  // When the user clicks or drags the track, we want the motion to set and drag the\n  // closest thumb.  Hence we also need to install useMove() on the track element.\n  // Here, we keep track of which index is the \"closest\" to the drag start point.\n  // It is set onMouseDown/onTouchDown; see trackProps below.\n  const realTimeTrackDraggingIndex = useRef<number | null>(null);\n\n  const stateRef = useRef<SliderState>(null);\n  stateRef.current = state;\n  const reverseX = direction === 'rtl';\n  const currentPosition = useRef<number>(null);\n  const {moveProps} = useMove({\n    onMoveStart() {\n      currentPosition.current = null;\n    },\n    onMove({deltaX, deltaY}) {\n      let size = isVertical ? trackRef.current.offsetHeight : trackRef.current.offsetWidth;\n\n      if (currentPosition.current == null) {\n        currentPosition.current = stateRef.current.getThumbPercent(realTimeTrackDraggingIndex.current) * size;\n      }\n\n      let delta = isVertical ? deltaY : deltaX;\n      if (isVertical || reverseX) {\n        delta = -delta;\n      }\n\n      currentPosition.current += delta;\n\n      if (realTimeTrackDraggingIndex.current != null && trackRef.current) {\n        const percent = clamp(currentPosition.current / size, 0, 1);\n        stateRef.current.setThumbPercent(realTimeTrackDraggingIndex.current, percent);\n      }\n    },\n    onMoveEnd() {\n      if (realTimeTrackDraggingIndex.current != null) {\n        stateRef.current.setThumbDragging(realTimeTrackDraggingIndex.current, false);\n        realTimeTrackDraggingIndex.current = null;\n      }\n    }\n  });\n\n  let currentPointer = useRef<number | null | undefined>(undefined);\n  let onDownTrack = (e: React.UIEvent, id: number, clientX: number, clientY: number) => {\n    // We only trigger track-dragging if the user clicks on the track itself and nothing is currently being dragged.\n    if (trackRef.current && !props.isDisabled && state.values.every((_, i) => !state.isThumbDragging(i))) {\n      let size = isVertical ? trackRef.current.offsetHeight : trackRef.current.offsetWidth;\n      // Find the closest thumb\n      const trackPosition = trackRef.current.getBoundingClientRect()[isVertical ? 'top' : 'left'];\n      const clickPosition = isVertical ? clientY : clientX;\n      const offset = clickPosition - trackPosition;\n      let percent = offset / size;\n      if (direction === 'rtl' || isVertical) {\n        percent = 1 - percent;\n      }\n      let value = state.getPercentValue(percent);\n\n      // to find the closet thumb we split the array based on the first thumb position to the \"right/end\" of the click.\n      let closestThumb;\n      let split = state.values.findIndex(v => value - v < 0);\n      if (split === 0) { // If the index is zero then the closetThumb is the first one\n        closestThumb = split;\n      } else if (split === -1) { // If no index is found they've clicked past all the thumbs\n        closestThumb = state.values.length - 1;\n      } else {\n        let lastLeft = state.values[split - 1];\n        let firstRight = state.values[split];\n        // Pick the last left/start thumb, unless they are stacked on top of each other, then pick the right/end one\n        if (Math.abs(lastLeft - value) < Math.abs(firstRight - value)) {\n          closestThumb = split - 1;\n        } else {\n          closestThumb = split;\n        }\n      }\n\n      // Confirm that the found closest thumb is editable, not disabled, and move it\n      if (closestThumb >= 0 && state.isThumbEditable(closestThumb)) {\n        // Don't unfocus anything\n        e.preventDefault();\n\n        realTimeTrackDraggingIndex.current = closestThumb;\n        state.setFocusedThumb(closestThumb);\n        currentPointer.current = id;\n\n        state.setThumbDragging(realTimeTrackDraggingIndex.current, true);\n        state.setThumbValue(closestThumb, value);\n\n        addGlobalListener(window, 'mouseup', onUpTrack, false);\n        addGlobalListener(window, 'touchend', onUpTrack, false);\n        addGlobalListener(window, 'pointerup', onUpTrack, false);\n      } else {\n        realTimeTrackDraggingIndex.current = null;\n      }\n    }\n  };\n\n  let onUpTrack = (e) => {\n    let id = e.pointerId ?? e.changedTouches?.[0].identifier;\n    if (id === currentPointer.current) {\n      if (realTimeTrackDraggingIndex.current != null) {\n        state.setThumbDragging(realTimeTrackDraggingIndex.current, false);\n        realTimeTrackDraggingIndex.current = null;\n      }\n\n      removeGlobalListener(window, 'mouseup', onUpTrack, false);\n      removeGlobalListener(window, 'touchend', onUpTrack, false);\n      removeGlobalListener(window, 'pointerup', onUpTrack, false);\n    }\n  };\n\n  if (labelProps.htmlFor) {\n    // Ideally the `for` attribute should point to the first thumb, but VoiceOver on iOS\n    // causes this to override the `aria-labelledby` on the thumb. This causes the first\n    // thumb to only be announced as the slider label rather than its individual name as well.\n    // See https://bugs.webkit.org/show_bug.cgi?id=172464.\n    delete labelProps.htmlFor;\n    labelProps.onClick = () => {\n      // Safari does not focus <input type=\"range\"> elements when clicking on an associated <label>,\n      // so do it manually. In addition, make sure we show the focus ring.\n      document.getElementById(getSliderThumbId(state, 0))?.focus();\n      setInteractionModality('keyboard');\n    };\n  }\n\n  return {\n    labelProps,\n    // The root element of the Slider will have role=\"group\" to group together\n    // all the thumb inputs in the Slider.  The label of the Slider will\n    // be used to label the group.\n    groupProps: {\n      role: 'group',\n      ...fieldProps\n    },\n    trackProps: mergeProps({\n      onMouseDown(e: React.MouseEvent<HTMLElement>) {\n        if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) {\n          return;\n        }\n        onDownTrack(e, undefined, e.clientX, e.clientY);\n      },\n      onPointerDown(e: React.PointerEvent<HTMLElement>) {\n        if (e.pointerType === 'mouse' && (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey)) {\n          return;\n        }\n        onDownTrack(e, e.pointerId, e.clientX, e.clientY);\n      },\n      onTouchStart(e: React.TouchEvent<HTMLElement>) { onDownTrack(e, e.changedTouches[0].identifier, e.changedTouches[0].clientX, e.changedTouches[0].clientY); }\n    }, moveProps),\n    outputProps: {\n      htmlFor: state.values.map((_, index) => getSliderThumbId(state, index)).join(' '),\n      'aria-live': 'off'\n    }\n  };\n}\n", "import {SliderState} from '@react-stately/slider';\n\nexport const sliderIds = new WeakMap<SliderState, string>();\n\nexport function getSliderThumbId(state: SliderState, index: number) {\n  let id = sliderIds.get(state);\n  if (!id) {\n    throw new Error('Unknown slider state');\n  }\n\n  return `${id}-${index}`;\n}\n", "import {AriaSliderThumbProps} from '@react-types/slider';\nimport {clamp, focusWithoutScrolling, mergeProps, useGlobalListeners} from '@react-aria/utils';\nimport {getSliderThumbId, sliderIds} from './utils';\nimport React, {ChangeEvent, HTMLAttributes, InputHTMLAttributes, LabelHTMLAttributes, RefObject, useCallback, useEffect, useRef} from 'react';\nimport {SliderState} from '@react-stately/slider';\nimport {useFocusable} from '@react-aria/focus';\nimport {useKeyboard, useMove} from '@react-aria/interactions';\nimport {useLabel} from '@react-aria/label';\nimport {useLocale} from '@react-aria/i18n';\n\ninterface SliderThumbAria {\n  /** Props for the root thumb element; handles the dragging motion. */\n  thumbProps: HTMLAttributes<HTMLElement>,\n\n  /** Props for the visually hidden range input element. */\n  inputProps: InputHTMLAttributes<HTMLInputElement>,\n\n  /** Props for the label element for this thumb (optional). */\n  labelProps: LabelHTMLAttributes<HTMLLabelElement>\n}\n\ninterface SliderThumbOptions extends AriaSliderThumbProps {\n  /** A ref to the track element. */\n  trackRef: RefObject<HTMLElement>,\n  /** A ref to the thumb input element. */\n  inputRef: RefObject<HTMLInputElement>\n}\n\n/**\n * Provides behavior and accessibility for a thumb of a slider component.\n *\n * @param opts Options for this Slider thumb.\n * @param state Slider state, created via `useSliderState`.\n */\nexport function useSliderThumb(\n  opts: SliderThumbOptions,\n  state: SliderState\n): SliderThumbAria {\n  let {\n    index,\n    isRequired,\n    isDisabled,\n    validationState,\n    trackRef,\n    inputRef\n  } = opts;\n\n  let isVertical = opts.orientation === 'vertical';\n\n  let {direction} = useLocale();\n  let {addGlobalListener, removeGlobalListener} = useGlobalListeners();\n\n  let labelId = sliderIds.get(state);\n  const {labelProps, fieldProps} = useLabel({\n    ...opts,\n    id: getSliderThumbId(state, index),\n    'aria-labelledby': `${labelId} ${opts['aria-labelledby'] ?? ''}`.trim()\n  });\n\n  const value = state.values[index];\n\n  const focusInput = useCallback(() => {\n    if (inputRef.current) {\n      focusWithoutScrolling(inputRef.current);\n    }\n  }, [inputRef]);\n\n  const isFocused = state.focusedThumb === index;\n\n  useEffect(() => {\n    if (isFocused) {\n      focusInput();\n    }\n  }, [isFocused, focusInput]);\n\n  const stateRef = useRef<SliderState>(null);\n  stateRef.current = state;\n  let reverseX = direction === 'rtl';\n  let currentPosition = useRef<number>(null);\n\n  let {keyboardProps} = useKeyboard({\n    onKeyDown(e) {\n      let {\n        getThumbMaxValue,\n        getThumbMinValue,\n        decrementThumb,\n        incrementThumb,\n        setThumbValue,\n        setThumbDragging,\n        pageSize\n      } = stateRef.current;\n      // these are the cases that useMove or useSlider don't handle\n      if (!/^(PageUp|PageDown|Home|End)$/.test(e.key)) {\n        e.continuePropagation();\n        return;\n      }\n      // same handling as useMove, stopPropagation to prevent useSlider from handling the event as well.\n      e.preventDefault();\n      // remember to set this so that onChangeEnd is fired\n      setThumbDragging(index, true);\n      switch (e.key) {\n        case 'PageUp':\n          incrementThumb(index, pageSize);\n          break;\n        case 'PageDown':\n          decrementThumb(index, pageSize);\n          break;\n        case 'Home':\n          setThumbValue(index, getThumbMinValue(index));\n          break;\n        case 'End':\n          setThumbValue(index, getThumbMaxValue(index));\n          break;\n      }\n      setThumbDragging(index, false);\n    }\n  });\n\n  let {moveProps} = useMove({\n    onMoveStart() {\n      currentPosition.current = null;\n      stateRef.current.setThumbDragging(index, true);\n    },\n    onMove({deltaX, deltaY, pointerType, shiftKey}) {\n      const {\n        getThumbPercent,\n        setThumbPercent,\n        decrementThumb,\n        incrementThumb,\n        step,\n        pageSize\n      } = stateRef.current;\n      let size = isVertical ? trackRef.current.offsetHeight : trackRef.current.offsetWidth;\n\n      if (currentPosition.current == null) {\n        currentPosition.current = getThumbPercent(index) * size;\n      }\n      if (pointerType === 'keyboard') {\n        if ((deltaX > 0 && reverseX) || (deltaX < 0 && !reverseX) || deltaY > 0) {\n          decrementThumb(index, shiftKey ? pageSize : step);\n        } else {\n          incrementThumb(index, shiftKey ? pageSize : step);\n        }\n      } else {\n        let delta = isVertical ? deltaY : deltaX;\n        if (isVertical || reverseX) {\n          delta = -delta;\n        }\n\n        currentPosition.current += delta;\n        setThumbPercent(index, clamp(currentPosition.current / size, 0, 1));\n      }\n    },\n    onMoveEnd() {\n      stateRef.current.setThumbDragging(index, false);\n    }\n  });\n\n  // Immediately register editability with the state\n  state.setThumbEditable(index, !isDisabled);\n\n  const {focusableProps} = useFocusable(\n    mergeProps(opts, {\n      onFocus: () => state.setFocusedThumb(index),\n      onBlur: () => state.setFocusedThumb(undefined)\n    }),\n    inputRef\n  );\n\n  let currentPointer = useRef<number | undefined>(undefined);\n  let onDown = (id?: number) => {\n    focusInput();\n    currentPointer.current = id;\n    state.setThumbDragging(index, true);\n\n    addGlobalListener(window, 'mouseup', onUp, false);\n    addGlobalListener(window, 'touchend', onUp, false);\n    addGlobalListener(window, 'pointerup', onUp, false);\n\n  };\n\n  let onUp = (e) => {\n    let id = e.pointerId ?? e.changedTouches?.[0].identifier;\n    if (id === currentPointer.current) {\n      focusInput();\n      state.setThumbDragging(index, false);\n      removeGlobalListener(window, 'mouseup', onUp, false);\n      removeGlobalListener(window, 'touchend', onUp, false);\n      removeGlobalListener(window, 'pointerup', onUp, false);\n    }\n  };\n\n  // We install mouse handlers for the drag motion on the thumb div, but\n  // not the key handler for moving the thumb with the slider.  Instead,\n  // we focus the range input, and let the browser handle the keyboard\n  // interactions; we then listen to input's onChange to update state.\n  return {\n    inputProps: mergeProps(focusableProps, fieldProps, {\n      type: 'range',\n      tabIndex: !isDisabled ? 0 : undefined,\n      min: state.getThumbMinValue(index),\n      max: state.getThumbMaxValue(index),\n      step: state.step,\n      value: value,\n      disabled: isDisabled,\n      'aria-orientation': opts.orientation,\n      'aria-valuetext': state.getThumbValueLabel(index),\n      'aria-required': isRequired || undefined,\n      'aria-invalid': validationState === 'invalid' || undefined,\n      'aria-errormessage': opts['aria-errormessage'],\n      onChange: (e: ChangeEvent<HTMLInputElement>) => {\n        stateRef.current.setThumbValue(index, parseFloat(e.target.value));\n      }\n    }),\n    thumbProps: !isDisabled ? mergeProps(\n      keyboardProps,\n      moveProps,\n      {\n        onMouseDown: (e: React.MouseEvent<HTMLElement>) => {\n          if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) {\n            return;\n          }\n          onDown();\n        },\n        onPointerDown: (e: React.PointerEvent<HTMLElement>) => {\n          if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) {\n            return;\n          }\n          onDown(e.pointerId);\n        },\n        onTouchStart: (e: React.TouchEvent<HTMLElement>) => {onDown(e.changedTouches[0].identifier);}\n      }\n    ) : {},\n    labelProps\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport * from './useSliderState';\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {clamp, snapValueToStep} from '@react-aria/utils';\nimport {SliderProps} from '@react-types/slider';\nimport {useControlledState} from '@react-stately/utils';\nimport {useMemo, useRef, useState} from 'react';\n\nexport interface SliderState {\n  /**\n   * Values managed by the slider by thumb index.\n   */\n  readonly values: number[],\n  /**\n   * Get the value for the specified thumb.\n   * @param index\n   */\n  getThumbValue(index: number): number,\n\n  /**\n   * Sets the value for the specified thumb.\n   * The actual value set will be clamped and rounded according to min/max/step.\n   * @param index\n   * @param value\n   */\n  setThumbValue(index: number, value: number): void,\n\n  /**\n   * Sets value for the specified thumb by percent offset (between 0 and 1).\n   * @param index\n   * @param percent\n   */\n  setThumbPercent(index: number, percent: number): void,\n\n  /**\n   * Whether the specific thumb is being dragged.\n   * @param index\n   */\n  isThumbDragging(index: number): boolean,\n  /**\n   * Set is dragging on the specified thumb.\n   * @param index\n   * @param dragging\n   */\n  setThumbDragging(index: number, dragging: boolean): void,\n\n  /**\n   * Currently-focused thumb index.\n   */\n  readonly focusedThumb: number | undefined,\n  /**\n   * Set focused true on specified thumb. This will remove focus from\n   * any thumb that had it before.\n   * @param index\n   */\n  setFocusedThumb(index: number | undefined): void,\n\n  /**\n   * Returns the specified thumb's value as a percentage from 0 to 1.\n   * @param index\n   */\n  getThumbPercent(index: number): number,\n\n  /**\n   * Returns the value as a percent between the min and max of the slider.\n   * @param index\n   */\n  getValuePercent(value: number): number,\n\n  /**\n   * Returns the string label for the specified thumb's value, per props.formatOptions.\n   * @param index\n   */\n  getThumbValueLabel(index: number): string,\n\n  /**\n   * Returns the string label for the value, per props.formatOptions.\n   * @param index\n   */\n  getFormattedValue(value: number): string,\n\n  /**\n   * Returns the min allowed value for the specified thumb.\n   * @param index\n   */\n  getThumbMinValue(index: number): number,\n\n  /**\n   * Returns the max allowed value for the specified thumb.\n   * @param index\n   */\n  getThumbMaxValue(index: number): number,\n\n  /**\n   * Converts a percent along track (between 0 and 1) to the corresponding value.\n   * @param percent\n   */\n  getPercentValue(percent: number): number,\n\n  /**\n   * Returns if the specified thumb is editable.\n   * @param index\n   */\n  isThumbEditable(index: number): boolean,\n\n  /**\n   * Set the specified thumb's editable state.\n   * @param index\n   * @param editable\n   */\n  setThumbEditable(index: number, editable: boolean): void,\n\n  /**\n   * Increments the value of the thumb by the step or page amount.\n   */\n  incrementThumb(index: number, stepSize?: number): void,\n  /**\n   * Decrements the value of the thumb by the step or page amount.\n   */\n  decrementThumb(index: number, stepSize?: number): void,\n\n  /**\n   * The step amount for the slider.\n   */\n  readonly step: number,\n\n  /**\n   * The page size for the slider, used to do a bigger step.\n   */\n  readonly pageSize: number\n}\n\nconst DEFAULT_MIN_VALUE = 0;\nconst DEFAULT_MAX_VALUE = 100;\nconst DEFAULT_STEP_VALUE = 1;\n\ninterface SliderStateOptions extends SliderProps {\n  numberFormatter: Intl.NumberFormat\n}\n\n/**\n * Provides state management for a slider component. Stores values for all thumbs,\n * formats values for localization, and provides methods to update the position\n * of any thumbs.\n * @param props\n */\nexport function useSliderState(props: SliderStateOptions): SliderState {\n  const {\n    isDisabled,\n    minValue = DEFAULT_MIN_VALUE,\n    maxValue = DEFAULT_MAX_VALUE,\n    numberFormatter: formatter,\n    step = DEFAULT_STEP_VALUE\n  } = props;\n\n  // Page step should be at least equal to step and always a multiple of the step.\n  let pageSize = useMemo(() => {\n    let calcPageSize = (maxValue - minValue) / 10;\n    calcPageSize = snapValueToStep(calcPageSize, 0, calcPageSize + step, step);\n    return Math.max(calcPageSize, step);\n  }, [step, maxValue, minValue]);\n\n  const [values, setValues] = useControlledState<number[]>(\n    props.value as any,\n    props.defaultValue ?? [minValue] as any,\n    props.onChange as any\n  );\n  const [isDraggings, setDraggings] = useState<boolean[]>(new Array(values.length).fill(false));\n  const isEditablesRef = useRef<boolean[]>(new Array(values.length).fill(true));\n  const [focusedIndex, setFocusedIndex] = useState<number | undefined>(undefined);\n\n  const valuesRef = useRef<number[]>(null);\n  valuesRef.current = values;\n  const isDraggingsRef = useRef<boolean[]>(null);\n  isDraggingsRef.current = isDraggings;\n\n  function getValuePercent(value: number) {\n    return (value - minValue) / (maxValue - minValue);\n  }\n\n  function getThumbMinValue(index: number) {\n    return index === 0 ? minValue : values[index - 1];\n  }\n  function getThumbMaxValue(index: number) {\n    return index === values.length - 1 ? maxValue : values[index + 1];\n  }\n\n  function isThumbEditable(index: number) {\n    return isEditablesRef.current[index];\n  }\n\n  function setThumbEditable(index: number, editable: boolean) {\n    isEditablesRef.current[index] = editable;\n  }\n\n  function updateValue(index: number, value: number) {\n    if (isDisabled || !isThumbEditable(index)) {\n      return;\n    }\n    const thisMin = getThumbMinValue(index);\n    const thisMax = getThumbMaxValue(index);\n\n    // Round value to multiple of step, clamp value between min and max\n    value = snapValueToStep(value, thisMin, thisMax, step);\n    valuesRef.current = replaceIndex(valuesRef.current, index, value);\n    setValues(valuesRef.current);\n  }\n\n  function updateDragging(index: number, dragging: boolean) {\n    if (isDisabled || !isThumbEditable(index)) {\n      return;\n    }\n\n    const wasDragging = isDraggingsRef.current[index];\n    isDraggingsRef.current = replaceIndex(isDraggingsRef.current, index, dragging);\n    setDraggings(isDraggingsRef.current);\n\n    // Call onChangeEnd if no handles are dragging.\n    if (props.onChangeEnd && wasDragging && !isDraggingsRef.current.some(Boolean)) {\n      props.onChangeEnd(valuesRef.current);\n    }\n  }\n\n  function getFormattedValue(value: number) {\n    return formatter.format(value);\n  }\n\n  function setThumbPercent(index: number, percent: number) {\n    updateValue(index, getPercentValue(percent));\n  }\n\n  function getRoundedValue(value: number) {\n    return Math.round((value - minValue) / step) * step + minValue;\n  }\n\n  function getPercentValue(percent: number) {\n    const val = percent * (maxValue - minValue) + minValue;\n    return clamp(getRoundedValue(val), minValue, maxValue);\n  }\n\n  function incrementThumb(index: number, stepSize: number = 1) {\n    let s = Math.max(stepSize, step);\n    updateValue(index, snapValueToStep(values[index] + s, minValue, maxValue, step));\n  }\n\n  function decrementThumb(index: number, stepSize: number = 1) {\n    let s = Math.max(stepSize, step);\n    updateValue(index, snapValueToStep(values[index] - s, minValue, maxValue, step));\n  }\n\n  return {\n    values: values,\n    getThumbValue: (index: number) => values[index],\n    setThumbValue: updateValue,\n    setThumbPercent,\n    isThumbDragging: (index: number) => isDraggings[index],\n    setThumbDragging: updateDragging,\n    focusedThumb: focusedIndex,\n    setFocusedThumb: setFocusedIndex,\n    getThumbPercent: (index: number) => getValuePercent(values[index]),\n    getValuePercent,\n    getThumbValueLabel: (index: number) => getFormattedValue(values[index]),\n    getFormattedValue,\n    getThumbMinValue,\n    getThumbMaxValue,\n    getPercentValue,\n    isThumbEditable,\n    setThumbEditable,\n    incrementThumb,\n    decrementThumb,\n    step,\n    pageSize\n  };\n}\n\nfunction replaceIndex<T>(array: T[], index: number, value: T) {\n  if (array[index] === value) {\n    return array;\n  }\n\n  return [...array.slice(0, index), value, ...array.slice(index + 1)];\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport * from './useSpinButton';\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {announce} from '@react-aria/live-announcer';\nimport {AriaButtonProps} from '@react-types/button';\nimport {HTMLAttributes, useCallback, useEffect, useRef} from 'react';\nimport {InputBase, RangeInputBase, Validation, ValueBase} from '@react-types/shared';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {useGlobalListeners} from '@react-aria/utils';\nimport {useMessageFormatter} from '@react-aria/i18n';\n\n\nexport interface SpinButtonProps extends InputBase, Validation, ValueBase<number>, RangeInputBase<number> {\n  textValue?: string,\n  onIncrement?: () => void,\n  onIncrementPage?: () => void,\n  onDecrement?: () => void,\n  onDecrementPage?: () => void,\n  onDecrementToMin?: () => void,\n  onIncrementToMax?: () => void\n}\n\nexport interface SpinbuttonAria {\n  spinButtonProps: HTMLAttributes<HTMLDivElement>,\n  incrementButtonProps: AriaButtonProps,\n  decrementButtonProps: AriaButtonProps\n}\n\nexport function useSpinButton(\n  props: SpinButtonProps\n): SpinbuttonAria {\n  const _async = useRef<number>();\n  let {\n    value,\n    textValue,\n    minValue,\n    maxValue,\n    isDisabled,\n    isReadOnly,\n    isRequired,\n    onIncrement,\n    onIncrementPage,\n    onDecrement,\n    onDecrementPage,\n    onDecrementToMin,\n    onIncrementToMax\n  } = props;\n  const formatMessage = useMessageFormatter(intlMessages);\n  const propsRef = useRef(props);\n  propsRef.current = props;\n\n  const clearAsync = () => clearTimeout(_async.current);\n\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => clearAsync();\n  }, []);\n\n  let onKeyDown = (e) => {\n    if (e.ctrlKey || e.metaKey || e.shiftKey || e.altKey || isReadOnly) {\n      return;\n    }\n\n    switch (e.key) {\n      case 'PageUp':\n        if (onIncrementPage) {\n          e.preventDefault();\n          onIncrementPage();\n          break;\n        }\n      // fallthrough!\n      case 'ArrowUp':\n      case 'Up':\n        if (onIncrement) {\n          e.preventDefault();\n          onIncrement();\n        }\n        break;\n      case 'PageDown':\n        if (onDecrementPage) {\n          e.preventDefault();\n          onDecrementPage();\n          break;\n        }\n      // fallthrough\n      case 'ArrowDown':\n      case 'Down':\n        if (onDecrement) {\n          e.preventDefault();\n          onDecrement();\n        }\n        break;\n      case 'Home':\n        if (onDecrementToMin) {\n          e.preventDefault();\n          onDecrementToMin();\n        }\n        break;\n      case 'End':\n        if (onIncrementToMax) {\n          e.preventDefault();\n          onIncrementToMax();\n        }\n        break;\n    }\n  };\n\n  let isFocused = useRef(false);\n  let onFocus = () => {\n    isFocused.current = true;\n  };\n\n  let onBlur = () => {\n    isFocused.current = false;\n  };\n\n  // Replace Unicode hyphen-minus (U+002D) with minus sign (U+2212).\n  // This ensures that macOS VoiceOver announces it as \"minus\" even with other characters between the minus sign\n  // and the number (e.g. currency symbol). Otherwise it announces nothing because it assumes the character is a hyphen.\n  // In addition, replace the empty string with the word \"Empty\" so that iOS VoiceOver does not read \"50%\" for an empty field.\n  textValue = textValue === '' ? formatMessage('Empty') : (textValue || `${value}`).replace('-', '\\u2212');\n\n  useEffect(() => {\n    if (isFocused.current) {\n      announce(textValue, 'assertive');\n    }\n  }, [textValue]);\n\n  const onIncrementPressStart = useCallback(\n    (initialStepDelay: number) => {\n      clearAsync();\n      propsRef.current.onIncrement();\n      // Start spinning after initial delay\n      _async.current = window.setTimeout(\n        () => {\n          if (isNaN(maxValue) || isNaN(value) || value < maxValue) {\n            onIncrementPressStart(60);\n          }\n        },\n        initialStepDelay\n      );\n    },\n    [onIncrement, maxValue, value]\n  );\n\n  const onDecrementPressStart = useCallback(\n    (initialStepDelay: number) => {\n      clearAsync();\n      propsRef.current.onDecrement();\n      // Start spinning after initial delay\n      _async.current = window.setTimeout(\n        () => {\n          if (isNaN(minValue) || isNaN(value) || value > minValue) {\n            onDecrementPressStart(60);\n          }\n        },\n        initialStepDelay\n      );\n    },\n    [onDecrement, minValue, value]\n  );\n\n  let cancelContextMenu = (e) => {\n    e.preventDefault();\n  };\n\n  let {addGlobalListener, removeAllGlobalListeners} = useGlobalListeners();\n\n  return {\n    spinButtonProps: {\n      role: 'spinbutton',\n      'aria-valuenow': !isNaN(value) ? value : null,\n      'aria-valuetext': textValue,\n      'aria-valuemin': minValue,\n      'aria-valuemax': maxValue,\n      'aria-disabled': isDisabled || null,\n      'aria-readonly': isReadOnly || null,\n      'aria-required': isRequired || null,\n      onKeyDown,\n      onFocus,\n      onBlur\n    },\n    incrementButtonProps: {\n      onPressStart: () => {\n        onIncrementPressStart(400);\n        addGlobalListener(window, 'contextmenu', cancelContextMenu);\n      },\n      onPressEnd: () => {\n        clearAsync();\n        removeAllGlobalListeners();\n      },\n      onFocus,\n      onBlur\n    },\n    decrementButtonProps: {\n      onPressStart: () => {\n        onDecrementPressStart(400);\n        addGlobalListener(window, 'contextmenu', cancelContextMenu);\n      },\n      onPressEnd: () => {\n        clearAsync();\n        removeAllGlobalListeners();\n      },\n      onFocus,\n      onBlur\n    }\n  };\n}\n", "const _temp0 = require(\"./ar-AE.json\");\nconst _temp1 = require(\"./bg-BG.json\");\nconst _temp2 = require(\"./cs-CZ.json\");\nconst _temp3 = require(\"./da-DK.json\");\nconst _temp4 = require(\"./de-DE.json\");\nconst _temp5 = require(\"./el-GR.json\");\nconst _temp6 = require(\"./en-US.json\");\nconst _temp7 = require(\"./es-ES.json\");\nconst _temp8 = require(\"./et-EE.json\");\nconst _temp9 = require(\"./fi-FI.json\");\nconst _temp10 = require(\"./fr-FR.json\");\nconst _temp11 = require(\"./he-IL.json\");\nconst _temp12 = require(\"./hr-HR.json\");\nconst _temp13 = require(\"./hu-HU.json\");\nconst _temp14 = require(\"./it-IT.json\");\nconst _temp15 = require(\"./ja-JP.json\");\nconst _temp16 = require(\"./ko-KR.json\");\nconst _temp17 = require(\"./lt-LT.json\");\nconst _temp18 = require(\"./lv-LV.json\");\nconst _temp19 = require(\"./nb-NO.json\");\nconst _temp20 = require(\"./nl-NL.json\");\nconst _temp21 = require(\"./pl-PL.json\");\nconst _temp22 = require(\"./pt-BR.json\");\nconst _temp23 = require(\"./pt-PT.json\");\nconst _temp24 = require(\"./ro-RO.json\");\nconst _temp25 = require(\"./ru-RU.json\");\nconst _temp26 = require(\"./sk-SK.json\");\nconst _temp27 = require(\"./sl-SI.json\");\nconst _temp28 = require(\"./sr-SP.json\");\nconst _temp29 = require(\"./sv-SE.json\");\nconst _temp30 = require(\"./tr-TR.json\");\nconst _temp31 = require(\"./uk-UA.json\");\nconst _temp32 = require(\"./zh-CN.json\");\nconst _temp33 = require(\"./zh-TW.json\");\nmodule.exports = {\n  \"ar-AE\": _temp0,\n  \"bg-BG\": _temp1,\n  \"cs-CZ\": _temp2,\n  \"da-DK\": _temp3,\n  \"de-DE\": _temp4,\n  \"el-GR\": _temp5,\n  \"en-US\": _temp6,\n  \"es-ES\": _temp7,\n  \"et-EE\": _temp8,\n  \"fi-FI\": _temp9,\n  \"fr-FR\": _temp10,\n  \"he-IL\": _temp11,\n  \"hr-HR\": _temp12,\n  \"hu-HU\": _temp13,\n  \"it-IT\": _temp14,\n  \"ja-JP\": _temp15,\n  \"ko-KR\": _temp16,\n  \"lt-LT\": _temp17,\n  \"lv-LV\": _temp18,\n  \"nb-NO\": _temp19,\n  \"nl-NL\": _temp20,\n  \"pl-PL\": _temp21,\n  \"pt-BR\": _temp22,\n  \"pt-PT\": _temp23,\n  \"ro-RO\": _temp24,\n  \"ru-RU\": _temp25,\n  \"sk-SK\": _temp26,\n  \"sl-SI\": _temp27,\n  \"sr-SP\": _temp28,\n  \"sv-SE\": _temp29,\n  \"tr-TR\": _temp30,\n  \"uk-UA\": _temp31,\n  \"zh-CN\": _temp32,\n  \"zh-TW\": _temp33\n}", "{\n  \"Empty\": \"\u0641\u0627\u0631\u063A\"\n}\n", "{\n  \"Empty\": \"\u0418\u0437\u043F\u0440\u0430\u0437\u043D\u0438\"\n}\n", "{\n  \"Empty\": \"Pr\u00E1zdn\u00E9\"\n}\n", "{\n  \"Empty\": \"Tom\"\n}\n", "{\n  \"Empty\": \"Leer\"\n}\n", "{\n  \"Empty\": \"\u0386\u03B4\u03B5\u03B9\u03BF\"\n}\n", "{\n  \"Empty\": \"Empty\"\n}\n", "{\n  \"Empty\": \"Vac\u00EDo\"\n}\n", "{\n  \"Empty\": \"T\u00FChjenda\"\n}\n", "{\n  \"Empty\": \"Tyhj\u00E4\"\n}\n", "{\n  \"Empty\": \"Vide\"\n}\n", "{\n  \"Empty\": \"\u05E8\u05D9\u05E7\"\n}\n", "{\n  \"Empty\": \"Prazno\"\n}\n", "{\n  \"Empty\": \"\u00DCres\"\n}\n", "{\n  \"Empty\": \"Vuoto\"\n}\n", "{\n  \"Empty\": \"\u7A7A\"\n}\n", "{\n  \"Empty\": \"\uBE44\uC5B4 \uC788\uC74C\"\n}\n", "{\n  \"Empty\": \"Tu\u0161\u010Dias\"\n}\n", "{\n  \"Empty\": \"Tuk\u0161s\"\n}\n", "{\n  \"Empty\": \"Tom\"\n}\n", "{\n  \"Empty\": \"Leeg\"\n}\n", "{\n  \"Empty\": \"Pusty\"\n}\n", "{\n  \"Empty\": \"Vazio\"\n}\n", "{\n  \"Empty\": \"Vazio\"\n}\n", "{\n  \"Empty\": \"Gol\"\n}\n", "{\n  \"Empty\": \"\u041D\u0435 \u0437\u0430\u043F\u043E\u043B\u043D\u0435\u043D\u043E\"\n}\n", "{\n  \"Empty\": \"Pr\u00E1zdne\"\n}\n", "{\n  \"Empty\": \"Prazen\"\n}\n", "{\n  \"Empty\": \"Prazno\"\n}\n", "{\n  \"Empty\": \"Tomt\"\n}\n", "{\n  \"Empty\": \"Bo\u015F\"\n}\n", "{\n  \"Empty\": \"\u041F\u0443\u0441\u0442\u043E\"\n}\n", "{\n  \"Empty\": \"\u7A7A\"\n}\n", "{\n  \"Empty\": \"\u7A7A\u767D\"\n}\n"],
  "mappings": "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",
  "names": []
}
