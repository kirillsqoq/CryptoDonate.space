/// <reference types="react" />
import { AriaCheckboxProps } from '@react-types/checkbox';
import { TableCollection } from '@react-types/table';
export declare const isInfinityScroll: (collection: TableCollection<unknown>) => boolean;
export declare const mapPropsToCheckboxAttr: (ariaProps: AriaCheckboxProps) => {
    children?: import("react").ReactNode;
    onChange?: ((isSelected: boolean) => void) | undefined;
    value?: string | undefined;
    name?: string | undefined;
    isDisabled?: boolean | undefined;
    validationState?: import("@react-types/shared/src/inputs").ValidationState | undefined;
    autoFocus?: boolean | undefined;
    onFocus?: ((e: import("react").FocusEvent<Element, Element>) => void) | undefined;
    onBlur?: ((e: import("react").FocusEvent<Element, Element>) => void) | undefined;
    onFocusChange?: ((isFocused: boolean) => void) | undefined;
    onKeyDown?: ((e: import("@react-types/shared/src/events").KeyboardEvent) => void) | undefined;
    onKeyUp?: ((e: import("@react-types/shared/src/events").KeyboardEvent) => void) | undefined;
    'aria-controls'?: string | undefined;
    excludeFromTabOrder?: boolean | undefined;
    id?: string | undefined;
    'aria-label'?: string | undefined;
    'aria-labelledby'?: string | undefined;
    'aria-describedby'?: string | undefined;
    'aria-details'?: string | undefined;
    'aria-errormessage'?: string | undefined;
    checked: boolean | undefined;
    initialChecked: boolean | undefined;
    indeterminate: boolean | undefined;
    readOnly: boolean | undefined;
    required: boolean | undefined;
};
