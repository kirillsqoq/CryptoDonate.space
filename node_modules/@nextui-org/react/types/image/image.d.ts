import React from 'react';
import { ObjectFit } from '../utils/prop-types';
import { CSS } from '../theme/stitches.config';
import { ImageContainerVariantProps } from './image.styles';
interface Props {
    src: string;
    autoResize?: boolean;
    showSkeleton?: boolean;
    width?: number | string;
    height?: number | string;
    maxDelay?: number;
    objectFit?: ObjectFit;
    className?: string;
    css?: CSS;
    containerCss?: CSS;
}
declare const defaultProps: {
    showSkeleton: boolean;
    autoResize: boolean;
    objectFit: "inherit" | "initial" | "revert" | "unset" | "none" | "contain" | "cover" | "fill" | "scale-down";
    maxDelay: number;
    className: string;
};
declare type NativeAttrs = Omit<React.ImgHTMLAttributes<unknown>, keyof Props>;
export declare type ImageProps = Props & typeof defaultProps & NativeAttrs & ImageContainerVariantProps;
export declare const Image: React.ForwardRefExoticComponent<Props & {
    showSkeleton: boolean;
    autoResize: boolean;
    objectFit: "inherit" | "initial" | "revert" | "unset" | "none" | "contain" | "cover" | "fill" | "scale-down";
    maxDelay: number;
    className: string;
} & NativeAttrs & import("@stitches/react/types/styled-component").TransformProps<{
    ready?: boolean | "true" | "false" | undefined;
}, {
    xs: string;
    sm: string;
    md: string;
    lg: string;
    xl: string;
    xsMax: string;
    smMax: string;
    mdMax: string;
    lgMax: string;
    xlMax: string;
    motion: string;
    safari: string;
    hover: string;
    dark: string;
    light: string;
}> & React.RefAttributes<HTMLImageElement>>;
declare type MemoImageComponent<P = {}> = React.NamedExoticComponent<P>;
declare type ComponentProps = Partial<typeof defaultProps> & Omit<Props, keyof typeof defaultProps> & NativeAttrs;
declare const _default: MemoImageComponent<ComponentProps>;
export default _default;
