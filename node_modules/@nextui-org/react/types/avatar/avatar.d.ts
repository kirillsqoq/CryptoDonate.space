import React from 'react';
import AvatarGroup from './avatar-group';
import { CSS } from '../theme/stitches.config';
import { AvatarVariantsProps } from './avatar.styles';
interface Props {
    text?: string;
    src?: string;
    icon?: React.ReactNode;
    alt?: string;
    className?: string;
    as?: keyof JSX.IntrinsicElements;
}
declare type NativeAttrs = Omit<Partial<React.ImgHTMLAttributes<unknown> & React.HTMLAttributes<unknown>>, keyof Props | 'sizes'>;
export declare type AvatarProps = Props & AvatarVariantsProps & NativeAttrs & {
    css?: CSS;
};
export declare const Avatar: React.ForwardRefExoticComponent<Props & import("@stitches/react/types/styled-component").TransformProps<{
    color?: "default" | "primary" | "secondary" | "success" | "warning" | "error" | "gradient" | undefined;
    textColor?: "default" | "primary" | "secondary" | "success" | "warning" | "error" | "white" | undefined;
    size?: "xs" | "sm" | "md" | "lg" | "xl" | undefined;
    borderWeight?: "light" | "normal" | "bold" | "extrabold" | "black" | undefined;
    bordered?: boolean | "true" | undefined;
    stacked?: boolean | "true" | undefined;
    pointer?: boolean | "true" | undefined;
    rounded?: boolean | "true" | undefined;
    squared?: boolean | "true" | undefined;
    zoomed?: boolean | "true" | undefined;
}, {
    xs: string;
    sm: string;
    md: string;
    lg: string;
    xl: string;
    xsMax: string;
    smMax: string;
    mdMax: string;
    lgMax: string;
    xlMax: string;
    motion: string;
    safari: string;
    hover: string;
    dark: string;
    light: string;
}> & NativeAttrs & {
    css?: CSS | undefined;
} & React.RefAttributes<HTMLSpanElement>>;
declare type AvatarComponent<P = {}> = React.NamedExoticComponent<P> & {
    Group: typeof AvatarGroup;
};
declare const _default: AvatarComponent<AvatarProps>;
export default _default;
