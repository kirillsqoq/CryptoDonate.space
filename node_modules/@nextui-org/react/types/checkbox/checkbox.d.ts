import React, { PropsWithoutRef, RefAttributes } from 'react';
import { AriaCheckboxProps } from '@react-types/checkbox';
import CheckboxGroup from './checkbox-group';
import { NormalSizes, NormalColors, SimpleColors } from '../utils/prop-types';
import { CSS } from '../theme/stitches.config';
interface Props extends Omit<AriaCheckboxProps, 'isDisabled' | 'isSelected' | 'defaultSelected' | 'isIndeterminate' | 'isReadOnly' | 'isRequired'> {
    color?: NormalColors;
    size?: NormalSizes;
    label?: string;
    labelColor?: SimpleColors;
    line?: boolean;
    indeterminate?: boolean;
    animated?: boolean;
    rounded?: boolean;
    required?: boolean;
    disabled?: boolean;
    checked?: boolean;
    initialChecked?: boolean;
    readOnly?: boolean;
    autoFocus?: boolean;
    className?: string;
    as?: keyof JSX.IntrinsicElements;
}
declare const defaultProps: {
    value: string;
    size: "xs" | "sm" | "md" | "lg" | "xl";
    color: "default" | "primary" | "secondary" | "success" | "warning" | "error" | "gradient";
    labelColor: "default" | "primary" | "secondary" | "success" | "warning" | "error";
    disabled: boolean;
    initialChecked: boolean;
    indeterminate: boolean;
    readOnly: boolean;
    required: boolean;
    rounded: boolean;
    autoFocus: boolean;
    line: boolean;
    animated: boolean;
    className: string;
};
declare type NativeAttrs = Omit<React.LabelHTMLAttributes<unknown>, keyof Props>;
export declare type CheckboxProps = Props & typeof defaultProps & NativeAttrs & {
    css?: CSS;
};
declare type CheckboxComponent<T, P = {}> = React.ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<T>> & {
    Group: typeof CheckboxGroup;
};
declare type ComponentProps = Partial<typeof defaultProps> & Omit<Props, keyof typeof defaultProps> & NativeAttrs & {
    css?: CSS;
};
declare const _default: CheckboxComponent<HTMLLabelElement, ComponentProps>;
export default _default;
