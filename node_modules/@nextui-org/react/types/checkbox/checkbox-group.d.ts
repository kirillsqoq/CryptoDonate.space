import React, { RefAttributes, PropsWithoutRef } from 'react';
import { AriaCheckboxGroupProps } from '@react-types/checkbox';
import { NormalSizes, NormalColors, SimpleColors } from '../utils/prop-types';
import { CSS } from '../theme/stitches.config';
interface Props extends Omit<AriaCheckboxGroupProps, 'isDisabled' | 'isReadOnly' | 'defaultChecked'> {
    color?: NormalColors;
    labelColor?: SimpleColors;
    row?: boolean;
    disabled?: boolean;
    readOnly?: boolean;
    size?: NormalSizes;
}
declare const defaultProps: {
    color: "default" | "primary" | "secondary" | "success" | "warning" | "error" | "gradient";
    labelColor: "default" | "primary" | "secondary" | "success" | "warning" | "error";
    disabled: boolean;
    readOnly: boolean;
    row: boolean;
    size: "xs" | "sm" | "md" | "lg" | "xl";
};
declare type NativeAttrs = Omit<React.HTMLAttributes<unknown>, keyof Props>;
export declare type CheckboxGroupProps = Props & typeof defaultProps & NativeAttrs & {
    css?: CSS;
};
declare type CheckboxGroupComponent<T, P = {}> = React.ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<T>>;
declare type ComponentProps = Partial<typeof defaultProps> & Omit<Props, keyof typeof defaultProps> & NativeAttrs & {
    css?: CSS;
};
declare const _default: CheckboxGroupComponent<HTMLDivElement, ComponentProps>;
export default _default;
